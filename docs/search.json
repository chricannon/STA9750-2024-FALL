[
  {
    "objectID": "final_project_unemployment_analysis.html",
    "href": "final_project_unemployment_analysis.html",
    "title": "What does unemployment look like over time?",
    "section": "",
    "text": "This report walks you through the specific analytical question of “What does unemployment look like over time?” supporting the overarching question of “What demographic factors best explain unemployment trends across NYC?”.\nThe focus of this report is to look at unemployment over time, from the years 2011 through 2022, on a countrywide level. It explores unemployment overall and then hones in on a few demographic specific unemployment rates, which include: unemployment by race, gender, and be race x gender.\nThis report will discuss the data acquired, any pre-processing and cleaning done on the data, and how this data was analyzed to draw conclusions on unemployment trends over time."
  },
  {
    "objectID": "fix_fp_file.html",
    "href": "fix_fp_file.html",
    "title": "Final Project - Individual Report",
    "section": "",
    "text": "Code\noptions(repos = c(CRAN = \"https://cloud.r-project.org\"))\n\n\n\n\nCode\ninstall.packages(\"fredr\")\n\n\n\nThe downloaded binary packages are in\n    /var/folders/c2/6mfj09xd2qn5dnwqvj_0mjg80000gn/T//Rtmpx0DxcE/downloaded_packages\n\n\nCode\n#if(!require(“fredr”)) install.packages(“fredr”)\nlibrary(fredr)\nlibrary(tidyverse)\n\n\n\n\nCode\nfredr_set_key(\"eb19c6daa01e5e21da01a78d9dff470d\")\n\n\nAccessing Countrywide Unemployment Rates.\nThe series ID for the nationwide unemployment rate is “UNRATE”. This is the Civilian Unemployment Rate.\nThe unemployment rate represents the number of unemployed as a percentage of the labor force. Labor force data are restricted to people 16 years of age and older, who currently reside in 1 of the 50 states or the District of Columbia, who do not reside in institutions (e.g., penal and mental facilities, homes for the aged), and who are not on active duty in the Armed Forces.\n\n\nCode\n# Retrieve monthly U.S. unemployment rate data\nunemployment_data &lt;- fredr_series_observations(series_id = \"UNRATE\")\n\n# Filter the data for the desired range\nunemployment_data_filtered &lt;- unemployment_data |&gt;\n  filter(date &gt;= as.Date(\"2011-01-01\") & date &lt; as.Date(\"2023-01-01\"))\n\nunemployment_yearly &lt;- unemployment_data_filtered |&gt;\n    mutate(year = lubridate::year(date)) |&gt;\n    group_by(year) |&gt;\n    summarize(average_unemployment = mean(value))\n\n\n\nU.S. Bureau of Labor Statistics, Unemployment Rate [UNRATE], retrieved from FRED, Federal Reserve Bank of St. Louis; https://fred.stlouisfed.org/series/UNRATE, December 8, 2024.\n\n\n\nCode\nlibrary(ggplot2)\n\nggplot(unemployment_data_filtered, aes(x = date, y = value)) +\n    geom_line() +\n    labs(title = \"U.S. Unemployment Rate Over Time (2011-2022)\",\n         x = \"Year\",\n         y = \"Unemployment Rate (%)\") +\n    theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Retrieve U.S. recession indicator data\nrecession_data &lt;- fredr_series_observations(series_id = \"USREC\")\n\n# Merge with unemployment data\nunemployment_recession &lt;- merge(unemployment_data_filtered, recession_data, by = \"date\", suffixes = c(\"_unemp\", \"_rec\"))\n\nggplot(unemployment_recession, aes(x = date, y = value_unemp)) +\n    geom_line(color = \"blue\") +\n    geom_rect(data = unemployment_recession |&gt; filter(value_rec == 1), \n              aes(xmin = date, xmax = lead(date), ymin = -Inf, ymax = Inf), \n              fill = \"red\", alpha = 0.2) +\n    labs(title = \"U.S. Unemployment Rate with Recession Periods (2011-Present)\",\n         x = \"Year\",\n         y = \"Unemployment Rate (%)\") +\n    theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nCode\navg_unemployment_plot &lt;- ggplot(unemployment_yearly, aes(x = year, y = average_unemployment)) +\n    geom_line() +\n    labs(title = \"Average Yearly U.S. Unemployment Rate (2011-2023)\",\n         x = \"Year\",\n         y = \"Average Unemployment Rate (%)\") +\n    theme_minimal()\n\n#ggsave(\"average_yearly_US_unemployment_rate.png\", plot=avg_unemployment_plot, width =6, height=4)\n\navg_unemployment_plot\n\n\n\n\n\n\n\n\n\n\n\nCode\nlibrary(sf)\nif(!file.exists(\"states.zip\")){\n  download.file(\"https://www2.census.gov/geo/tiger/GENZ2018/shp/cb_2018_us_state_500k.zip\", \n                destfile=\"states.zip\",\n                method=\"curl\")\n}\n\n##-\ntd &lt;- tempdir(); \nzip_contents &lt;- unzip(\"states.zip\", \n                      exdir = td)\n\nfname_shp &lt;- zip_contents[grepl(\"shp$\", zip_contents)]\nzip_sf &lt;- read_sf(fname_shp)\n\n\nSearch for series containing “unemployment rate”\n\n\nCode\n# Search for unemployment rate-related series\nunemployment_search &lt;- fredr_series_search_text(\"unemployment rate\")\n\n#peek at data\nhead(unemployment_search)\n\n\n# A tibble: 6 × 16\n  id         realtime_start realtime_end title observation_start observation_end\n  &lt;chr&gt;      &lt;chr&gt;          &lt;chr&gt;        &lt;chr&gt; &lt;chr&gt;             &lt;chr&gt;          \n1 UNRATE     2024-12-10     2024-12-10   Unem… 1948-01-01        2024-11-01     \n2 UNRATENSA  2024-12-10     2024-12-10   Unem… 1948-01-01        2024-11-01     \n3 LNS140000… 2024-12-10     2024-12-10   Unem… 1972-01-01        2024-11-01     \n4 LNU040000… 2024-12-10     2024-12-10   Unem… 1972-01-01        2024-11-01     \n5 NROU       2024-12-10     2024-12-10   Nonc… 1949-01-01        2034-10-01     \n6 CAUR       2024-12-10     2024-12-10   Unem… 1976-01-01        2024-10-01     \n# ℹ 10 more variables: frequency &lt;chr&gt;, frequency_short &lt;chr&gt;, units &lt;chr&gt;,\n#   units_short &lt;chr&gt;, seasonal_adjustment &lt;chr&gt;,\n#   seasonal_adjustment_short &lt;chr&gt;, last_updated &lt;chr&gt;, popularity &lt;int&gt;,\n#   group_popularity &lt;int&gt;, notes &lt;chr&gt;\n\n\nFilter for state-level unemployment rates\n\n\nCode\n# Filter for state-level unemployment rate series\nstate_unemployment_series &lt;- unemployment_search |&gt;\n  filter(grepl(\"unemployment rate\", title, ignore.case = TRUE)) |&gt;\n  filter(grepl(\"state\", title, ignore.case = TRUE))\n\n# View possible state-specific series\nstate_unemployment_series\n\n\n# A tibble: 24 × 16\n   id        realtime_start realtime_end title observation_start observation_end\n   &lt;chr&gt;     &lt;chr&gt;          &lt;chr&gt;        &lt;chr&gt; &lt;chr&gt;             &lt;chr&gt;          \n 1 M0892AUS… 2024-12-10     2024-12-10   Unem… 1929-04-01        1942-06-01     \n 2 Q0892BUS… 2024-12-10     2024-12-10   Unem… 1940-04-01        1946-10-01     \n 3 M0892BUS… 2024-12-10     2024-12-10   Unem… 1940-01-01        1946-12-01     \n 4 M0892CUS… 2024-12-10     2024-12-10   Unem… 1947-01-01        1966-12-01     \n 5 LRUN64TT… 2024-12-10     2024-12-10   Infr… 1970-01-01        2024-07-01     \n 6 LRUN64TT… 2024-12-10     2024-12-10   Infr… 1970-01-01        2024-10-01     \n 7 LRUN64TT… 2024-12-10     2024-12-10   Infr… 1955-01-01        2023-01-01     \n 8 LRUN64TT… 2024-12-10     2024-12-10   Infr… 1955-01-01        2023-01-01     \n 9 LRUN64TT… 2024-12-10     2024-12-10   Infr… 1955-01-01        2024-07-01     \n10 LRUN64TT… 2024-12-10     2024-12-10   Infr… 1955-01-01        2024-10-01     \n# ℹ 14 more rows\n# ℹ 10 more variables: frequency &lt;chr&gt;, frequency_short &lt;chr&gt;, units &lt;chr&gt;,\n#   units_short &lt;chr&gt;, seasonal_adjustment &lt;chr&gt;,\n#   seasonal_adjustment_short &lt;chr&gt;, last_updated &lt;chr&gt;, popularity &lt;int&gt;,\n#   group_popularity &lt;int&gt;, notes &lt;chr&gt;\n\n\nFrom looking through this list, realized we need all the ids that start with the state abbreviation followed by “UR” - each of these series id’s gives us the unemployment for each state over time. THe next step does additional filtering.\n\n\nCode\n# List of state abbreviations\nstate_abbreviations &lt;- c(\n  \"AL\", \"AK\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"FL\", \"GA\",\n  \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\",\n  \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\",\n  \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"RI\", \"SC\",\n  \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\"\n)\n\n# Filter for state unemployment series, need UR for seasonally adjusted\nstate_unemployment_series &lt;- unemployment_search |&gt;\n  filter(id %in% paste0(state_abbreviations, \"UR\"))\n\n# View the filtered series\nstate_unemployment_series\n\n\n# A tibble: 50 × 16\n   id    realtime_start realtime_end title     observation_start observation_end\n   &lt;chr&gt; &lt;chr&gt;          &lt;chr&gt;        &lt;chr&gt;     &lt;chr&gt;             &lt;chr&gt;          \n 1 CAUR  2024-12-10     2024-12-10   Unemploy… 1976-01-01        2024-10-01     \n 2 TXUR  2024-12-10     2024-12-10   Unemploy… 1976-01-01        2024-10-01     \n 3 NYUR  2024-12-10     2024-12-10   Unemploy… 1976-01-01        2024-10-01     \n 4 FLUR  2024-12-10     2024-12-10   Unemploy… 1976-01-01        2024-10-01     \n 5 PAUR  2024-12-10     2024-12-10   Unemploy… 1976-01-01        2024-10-01     \n 6 OHUR  2024-12-10     2024-12-10   Unemploy… 1976-01-01        2024-10-01     \n 7 MIUR  2024-12-10     2024-12-10   Unemploy… 1976-01-01        2024-10-01     \n 8 ALUR  2024-12-10     2024-12-10   Unemploy… 1976-01-01        2024-10-01     \n 9 MAUR  2024-12-10     2024-12-10   Unemploy… 1976-01-01        2024-10-01     \n10 NCUR  2024-12-10     2024-12-10   Unemploy… 1976-01-01        2024-10-01     \n# ℹ 40 more rows\n# ℹ 10 more variables: frequency &lt;chr&gt;, frequency_short &lt;chr&gt;, units &lt;chr&gt;,\n#   units_short &lt;chr&gt;, seasonal_adjustment &lt;chr&gt;,\n#   seasonal_adjustment_short &lt;chr&gt;, last_updated &lt;chr&gt;, popularity &lt;int&gt;,\n#   group_popularity &lt;int&gt;, notes &lt;chr&gt;\n\n\nUsing the filtered list of series IDs (as shown above) to fetch unemployment data for each state.\n\n\nCode\n# Fetch unemployment data for all states\nstate_unemployment_data &lt;- lapply(state_unemployment_series$id, function(series_id) {\n  fredr(\n    series_id = series_id,\n    observation_start = as.Date(\"2011-01-01\"),\n    observation_end = as.Date(\"2022-12-31\")\n  )\n})\n\n# Add state abbreviation to each dataframe\nstate_unemployment_data &lt;- mapply(\n  function(data, id) {\n    data$state &lt;- substr(id, 1, 2)  # Extract state abbreviation\n    data\n  },\n  state_unemployment_data,\n  state_unemployment_series$id,\n  SIMPLIFY = FALSE\n)\n\n# Combine into a single dataframe\nstate_unemployment_df &lt;- do.call(rbind, state_unemployment_data)\n\n# View the combined dataframe\nhead(state_unemployment_df)\n\n\n# A tibble: 6 × 6\n  date       series_id value realtime_start realtime_end state\n  &lt;date&gt;     &lt;chr&gt;     &lt;dbl&gt; &lt;date&gt;         &lt;date&gt;       &lt;chr&gt;\n1 2011-01-01 CAUR       12.3 2024-12-09     2024-12-09   CA   \n2 2011-02-01 CAUR       12.2 2024-12-09     2024-12-09   CA   \n3 2011-03-01 CAUR       12.1 2024-12-09     2024-12-09   CA   \n4 2011-04-01 CAUR       12   2024-12-09     2024-12-09   CA   \n5 2011-05-01 CAUR       12   2024-12-09     2024-12-09   CA   \n6 2011-06-01 CAUR       12   2024-12-09     2024-12-09   CA   \n\n\nCleaning up the data to keep only the relevant columns and compute yearly averages for each state from 2011 to 2022 -\n\n\nCode\nlibrary(dplyr)\n\n# Clean and select relevant columns\nstate_unemployment_clean &lt;- state_unemployment_df |&gt;\n  select(state, date, value) |&gt;\n  rename(\n    unemployment_rate = value  # Rename value to unemployment_rate\n  ) |&gt;\n  mutate(\n    year = format(as.Date(date), \"%Y\")  # Extract year from the date\n  )\n\n# Compute yearly averages for each state\nstate_unemployment_yearly &lt;- state_unemployment_clean |&gt;\n  filter(year &gt;= 2011 & year &lt;= 2022) |&gt;\n  group_by(state, year) |&gt;\n  summarize(\n    avg_unemployment = mean(unemployment_rate, na.rm = TRUE),\n    .groups = \"drop\"\n  )\n\n# View the cleaned data\nhead(state_unemployment_yearly)\n\n\n# A tibble: 6 × 3\n  state year  avg_unemployment\n  &lt;chr&gt; &lt;chr&gt;            &lt;dbl&gt;\n1 AK    2011              7.73\n2 AK    2012              7.25\n3 AK    2013              6.99\n4 AK    2014              6.74\n5 AK    2015              6.28\n6 AK    2016              6.6 \n\n\nPerforming a check on the data we create a table showing the number of yearly records for each state. We can group the data by state and count the distinct years.\n\n\nCode\nlibrary(dplyr)\nlibrary(gt)\n\n# Count the number of years for each state\nstate_yearly_counts &lt;- state_unemployment_yearly |&gt;\n  group_by(state) |&gt;\n  summarize(\n    year_count = n(),  # Count the number of records (years)\n    .groups = \"drop\"\n  )\n\n# Create gt table\nstate_yearly_counts |&gt; \n  gt() |&gt; \n  tab_header(\n    title = \"Yearly Records Count by State\",\n    subtitle = \"Number of years with unemployment data (2011-2022)\"\n  )\n\n\n\n\n\n\n\n\nYearly Records Count by State\n\n\nNumber of years with unemployment data (2011-2022)\n\n\nstate\nyear_count\n\n\n\n\nAK\n12\n\n\nAL\n12\n\n\nAR\n12\n\n\nAZ\n12\n\n\nCA\n12\n\n\nCO\n12\n\n\nCT\n12\n\n\nDE\n12\n\n\nFL\n12\n\n\nGA\n12\n\n\nHI\n12\n\n\nIA\n12\n\n\nID\n12\n\n\nIL\n12\n\n\nIN\n12\n\n\nKS\n12\n\n\nKY\n12\n\n\nLA\n12\n\n\nMA\n12\n\n\nMD\n12\n\n\nME\n12\n\n\nMI\n12\n\n\nMN\n12\n\n\nMO\n12\n\n\nMS\n12\n\n\nMT\n12\n\n\nNC\n12\n\n\nND\n12\n\n\nNE\n12\n\n\nNH\n12\n\n\nNJ\n12\n\n\nNM\n12\n\n\nNV\n12\n\n\nNY\n12\n\n\nOH\n12\n\n\nOK\n12\n\n\nOR\n12\n\n\nPA\n12\n\n\nRI\n12\n\n\nSC\n12\n\n\nSD\n12\n\n\nTN\n12\n\n\nTX\n12\n\n\nUT\n12\n\n\nVA\n12\n\n\nVT\n12\n\n\nWA\n12\n\n\nWI\n12\n\n\nWV\n12\n\n\nWY\n12\n\n\n\n\n\n\n\nNow we create an interactive map using the data. The steps involve the following:\n\n\nCode\nlibrary(sf)\nlibrary(dplyr)\nlibrary(tmap)\nlibrary(tigris)\n\n#rename existing shapefile\nus_states &lt;- zip_sf  \n#adjusting state column to match naming convention of state yearly unemployment table \nus_states &lt;- us_states |&gt;\n  mutate(state = STUSPS) \n\n#adjusting geometry for Alaska and Hawaii\nus_states &lt;- shift_geometry(\n  input_sf = us_states,\n  geoid_column = \"GEOID\",\n  preserve_area = FALSE, #scales Alaksa and Hawaii proportionately \n  position = \"below\" #places below continental US\n)\n\n#merging unemployment data with shapefile \nmap_data &lt;- us_states |&gt;\n  left_join(state_unemployment_yearly, by = \"state\")\n\n#creating interactive map \n#tmap_mode(\"view\")  # Enable interactive mode for the map\n\ntm &lt;- tm_shape(map_data) +\n  tm_polygons(\n    col = \"avg_unemployment\",  # Column to use for shading\n    title = \"Unemployment Rate (%)\",\n    palette = \"Blues\",  # Color palette for the map\n    style = \"quantile\",  # Break the shading into quantiles\n    popup.vars = c(\"State\" = \"state\", \"Year\" = \"year\", \"Rate\" = \"avg_unemployment\")\n  ) +\n  tm_facets(by = \"year\") +  # Animate changes over years\n  tm_view(set.view = c(-98, 38, 4))  # Center and zoom the map on the US\n\n# Render the map\ntm\n\n\n\n\n\n\n\n\n\nAltering the above code to make one interactive map-\n\n\nCode\nlibrary(sf)\nlibrary(dplyr)\nlibrary(tmap)\n\n#rename existing shapefile\nus_states &lt;- zip_sf  \n\n#adjusting state column to match naming convention of state yearly unemployment table \nus_states &lt;- us_states |&gt;\n  mutate(state = STUSPS) \n\n#merging unemployment data with shapefile \nmap_data &lt;- us_states |&gt;\n  left_join(state_unemployment_yearly, by = \"state\")\n\n#creating interactive map \ntmap_mode(\"plot\")  # This step is important - switch to static plotting mode\n\ntm2 &lt;- tm_shape(map_data) +\n  tm_polygons(\n    col = \"avg_unemployment\",  # Column to use for shading\n    title = \"Unemployment Rate (%)\",\n    palette = \"Blues\",  # Color palette for the map\n    style = \"quantile\",  # Break the shading into quantiles\n  ) +\n  tm_facets(along=\"year\", free.coords = FALSE)\n\ntmap_animation(tm, filename= \"unemployment_animation.gif\", delay=100)\n\n\nCreating frames\n\n\n\nCreating animation\nAnimation saved to /Users/christiecannon/STA9750-2024-FALL/unemployment_animation.gif \n\n\n\n\nCode\nknitr::include_graphics(\"unemployment_animation.gif\")"
  },
  {
    "objectID": "final_project_unemployment_analysis.html#appendix",
    "href": "final_project_unemployment_analysis.html#appendix",
    "title": "What does unemployment look like over time?",
    "section": "Appendix",
    "text": "Appendix\nExploring neighborhood-level data from the American Community Survey (ACS) through the US Census Bureau\nInstalling packages for direct access to the Census Bureau’s API to allow me to pull ACS data for various geographic levels, in the attempt to get more granular than bureau\nExploring ACS Variables\n\n\nCode\nacs_vars &lt;- load_variables(2022, \"acs5\", cache =TRUE) #using 2022 as most recent full year available in ACS\nview(acs_vars)\n\n\nFetching Neighborhood-Level Data\n\n\nCode\n# Variables for analysis\nselected_vars &lt;- c(\n  med_income = \"B19013_001E\",  # Median household income\n  poverty = \"B17001_002E\",     # People below poverty level\n  population = \"B01003_001E\"   # Total population\n)\n\n# Fetch data for NYC at the census tract level\nnyc_neighborhood_data &lt;- suppressMessages(get_acs(\n  geography = \"tract\",\n  variables = selected_vars,\n  state = \"NY\",\n  county = c(\"New York\", \"Kings\", \"Queens\", \"Bronx\", \"Richmond\"),\n  year = 2022,\n  survey = \"acs5\",\n  geometry = TRUE # Include geometry for mapping\n))\n\n\n\n\nCode\n# Summarize median income across census tracts\nincome_summary &lt;- nyc_neighborhood_data |&gt;\n  filter(variable == \"B19013_001\") |&gt;\n  summarize(\n    mean_income = mean(estimate, na.rm = TRUE),\n    median_income = median(estimate, na.rm = TRUE),\n    min_income = min(estimate, na.rm = TRUE),\n    max_income = max(estimate, na.rm = TRUE)\n  )\n\n\nList of neighborhoods with data\n\n\nCode\n# Filter data for median income\nmedian_income_table &lt;- nyc_neighborhood_data |&gt;\n  filter(variable == \"B19013_001\") |&gt;\n  mutate(\n    borough = case_when(\n      str_detect(NAME, \"Bronx\") ~ \"Bronx\",\n      str_detect(NAME, \"Kings\") ~ \"Brooklyn\",\n      str_detect(NAME, \"New York County\") ~ \"Manhattan\",\n      str_detect(NAME, \"Queens\") ~ \"Queens\",\n      str_detect(NAME, \"Richmond\") ~ \"Staten Island\",\n      TRUE ~ \"Unknown\"\n    )\n  )\n\n# Create a table\nmedian_income_table |&gt;\n  select(borough, NAME, estimate) |&gt;\n  rename(\n    Neighborhood = NAME,\n    `Median Income ($)` = estimate,\n    Borough = borough\n  ) |&gt;\n  gt() |&gt;\n  tab_header(\n    title = \"Median Household Income by Neighborhood\",\n    subtitle = \"Census Tract Data for NYC Boroughs\"\n  ) |&gt;\n  fmt_number(\n    columns = `Median Income ($)`,\n    decimals = 0\n  ) |&gt;\n  cols_align(\n    align = \"left\",\n    columns = everything()\n  )\n\n#remove geometry column \nmedian_income_table_clean &lt;- median_income_table |&gt;\n  select(-geometry) |&gt;\n  rename(\n    'Median Income ($)' = estimate\n  )\n\n# Creating a cleaner table\nmedian_income_table_clean |&gt;\n  gt() |&gt;\n  tab_header(\n    title = \"Median Household Income by Neighborhood\",\n    subtitle = \"Census Tract Data for NYC Boroughs\"\n  ) |&gt;\n  fmt_number(\n    columns = `Median Income ($)`,\n    decimals = 0\n  ) |&gt;\n  cols_align(\n    align = \"left\",\n    columns = everything()\n  )\n\nhead(median_income_table_clean)\n\n\nCreating a map. Grey areas indicate locations where census data is unavailable - such as parks, airports or other non-residential areas\n\n\nCode\nlibrary(ggplot2)\nlibrary(sf)\n\n# Filter for median income data\nmedian_income_map_data &lt;- median_income_table_clean |&gt;\n  filter(variable == \"B19013_001\") # Ensure this is the correct variable for median income\n\n# Create the map\nggplot(median_income_map_data) +\n  geom_sf(aes(fill = `Median Income ($)`), color = \"white\", size = 0.1) +\n  scale_fill_viridis_c(option = \"plasma\", na.value = \"grey\") +\n  labs(\n    title = \"Median Household Income by Neighborhood in NYC\",\n    subtitle = \"Census Tract Data (ACS 2022)\",\n    fill = \"Median Income ($)\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    plot.subtitle = element_text(size = 12)\n  )\n\n\n\n\n\n\n\n\n\nThe above is a map of all available data for each neighborhood in each of the 5 boroughs in NYC. Now we look at this data borough by borough, to get a better visual of each.\n\n\nCode\n# List of boroughs\nboroughs &lt;- c(\"Bronx\", \"Kings\", \"New York County\", \"Queens\", \"Richmond\")\n\n# Loop to create and print maps for each borough\nfor (borough in boroughs) {\n  borough_data &lt;- median_income_map_data |&gt;\n    filter(str_detect(NAME, borough))\n  \n  # Create map\n  p &lt;- ggplot(borough_data) +\n    geom_sf(aes(fill = `Median Income ($)`), color = \"white\", size = 0.1) +\n    scale_fill_viridis_c(option = \"plasma\", na.value = \"grey\") +\n    labs(\n      title = paste(\"Median Household Income in\", borough),\n      subtitle = \"Census Tract Data (ACS 2022)\",\n      fill = \"Median Income ($)\"\n    ) +\n    theme_minimal() +\n    theme(\n      plot.title = element_text(size = 16, face = \"bold\"),\n      plot.subtitle = element_text(size = 12)\n    )\n  \n  # print the plot\n  print(p)\n}"
  },
  {
    "objectID": "final_project_unemployment_analysis.html#data-acquisition",
    "href": "final_project_unemployment_analysis.html#data-acquisition",
    "title": "What does unemployment look like over time?",
    "section": "Data Acquisition",
    "text": "Data Acquisition\nThe unemployment rate data for this analysis was obtained from the Federal Reserve Economic Data (FRED) API. FRED provides unemployment rates by demographic and geographic categories. Each unemployment rate is associated with a unique series ID, which was used to query the API and retrieve relevant data. Using the API call, we accessed these series programmatically, ensuring automated and consistent data retrieval.\nYou will find that for every unemployment data set retrieved, the same pre-processing and cleaning was computed to allow for consistent analysis. This involved using the filter() function from the dplyr package, which is part of the tidyverse collection of R packages, to filter our data to only include data from 2011 to 2022. Within each year, the average unemployment value was computed using the mean() function, capturing an aggregated measure representative of the year’s unemployment trends. This was done as an effort to remain consistent with the data available to answer the other analytical questions of the project.\nThe following libraries are all necessary libraries needed throughout the entire report.\n\n\nCode\nlibrary(fredr)\nlibrary(tidyverse)\nlibrary(knitr)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(gt)\nlibrary(sf)\nlibrary(tmap)\nlibrary(tigris)\nlibrary(gifski)\nlibrary(ggrepel)\nlibrary(gganimate)\nlibrary(tools)\nlibrary(kableExtra)\n\n\nThe code below retrieves Countrywide Unemployment Rates.\nThe series ID for the nationwide unemployment rate is “UNRATE”. This is the Civilian Unemployment Rate.\n\nThe unemployment rate represents the number of unemployed as a percentage of the labor force. Labor force data are restricted to people 16 years of age and older, who currently reside in 1 of the 50 states or the District of Columbia, who do not reside in institutions (e.g., penal and mental facilities, homes for the aged), and who are not on active duty in the Armed Forces.\n\n\n\nCode\n# Retrieve monthly U.S. unemployment rate data\nCW_unemployment_data &lt;- fredr_series_observations(series_id = \"UNRATE\")\n\n# Filter the data for the desired range\nCW_unemployment_data_filtered &lt;- CW_unemployment_data |&gt;\n  filter(date &gt;= as.Date(\"2011-01-01\") & date &lt; as.Date(\"2023-01-01\"))\n\nCW_unemployment_yearly &lt;- CW_unemployment_data_filtered |&gt;\n    mutate(year = lubridate::year(date)) |&gt;\n    group_by(year) |&gt;\n    summarize(average_unemployment = mean(value))\n\n\n\nU.S. Bureau of Labor Statistics, Unemployment Rate [UNRATENSA], retrieved from FRED, Federal Reserve Bank of St. Louis; https://fred.stlouisfed.org/series/UNRATENSA, December 10, 2024.\n\nTo generate the line plot found below, the dataset CW_unemployment_data_filtered was used, with use of ggplot2 to create the visualization. The geom_line function was used to connect unemployment rate values along the timeline, and labels were added to provide context for the chart’s axes and title.\nThe output indicates a steady decline in the unemployment rate from 2011 through earliy 2020. The sharp spike in 2020 can be attributed to the COVID-19 pandemic’s economnic disruption. Post-2020, the unemployment rate decreased rapidly, which exemplifies the economic recovery efforts taken post-pandemic.\n\n\nCode\nlibrary(ggplot2)\n\nggplot(CW_unemployment_data_filtered, aes(x = date, y = value)) +\n    geom_line() +\n    labs(title = \"U.S. Unemployment Rate Over Time (2011-2022)\",\n         x = \"Year\",\n         y = \"Unemployment Rate (%)\") +\n    theme_minimal()\n\n\n\n\n\n\n\n\n\nThe series below takes the US unemployment rates and adds a recession indicator to the dataset.\n\n\nCode\n# Retrieve U.S. recession indicator data\nrecession_data &lt;- fredr_series_observations(series_id = \"USREC\")\n\n# Merge with unemployment data\nunemployment_recession &lt;- merge(CW_unemployment_data_filtered, recession_data, by = \"date\", suffixes = c(\"_unemp\", \"_rec\"))\n\nggplot(unemployment_recession, aes(x = date, y = value_unemp)) +\n    geom_line(color = \"blue\") +\n    geom_rect(data = unemployment_recession |&gt; filter(value_rec == 1), \n              aes(xmin = date, xmax = lead(date), ymin = -Inf, ymax = Inf), \n              fill = \"red\", alpha = 0.2) +\n    labs(title = \"U.S. Unemployment Rate with Recession Periods (2011-Present)\",\n         x = \"Year\",\n         y = \"Unemployment Rate (%)\") +\n    theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nCode\navg_unemployment_plot &lt;- ggplot(CW_unemployment_yearly, aes(x = year, y = average_unemployment)) +\n    geom_line() +\n    labs(title = \"Average Yearly U.S. Unemployment Rate (2011-2023)\",\n         x = \"Year\",\n         y = \"Average Unemployment Rate (%)\") +\n    theme_minimal()\n\n#ggsave(\"average_yearly_US_unemployment_rate.png\", plot=avg_unemployment_plot, width =6, height=4)\n\navg_unemployment_plot\n\n\n\n\n\n\n\n\n\nThe code belows involves the single usage of US Census Data in answering this speicifc analytical question of the project. The file obtained is a US states shapfile. The file contains a geometric column which identifies geographic boundaries. These geographic boundaries serve to later be joined with US data to then display the patterns across the US in a map format.\n\n\nCode\nlibrary(sf)\nif(!file.exists(\"states.zip\")){\n  download.file(\"https://www2.census.gov/geo/tiger/GENZ2018/shp/cb_2018_us_state_500k.zip\", \n                destfile=\"states.zip\",\n                method=\"curl\")\n}\n\n##-\ntd &lt;- tempdir(); \nzip_contents &lt;- unzip(\"states.zip\", \n                      exdir = td)\n\nfname_shp &lt;- zip_contents[grepl(\"shp$\", zip_contents)]\nzip_sf &lt;- read_sf(fname_shp)\n\n\nThe next few steps involve the searching process that went into the data acquisiton. In order to find all available unemployment data, I made use of the fred_series_search_text() function to find the series_ID for datasets involving the unemployment rate.\n\n\nCode\n# Search for unemployment rate-related series\nunemployment_search &lt;- fredr_series_search_text(\"unemployment rate\")\n\n# Create the table and style it\nkable(head(unemployment_search[,1:5]), format = \"html\") |&gt;\n  kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),\n    full_width = FALSE\n  )\n\n\n\n\n\n\nid\nrealtime_start\nrealtime_end\ntitle\nobservation_start\n\n\n\n\nUNRATE\n2024-12-15\n2024-12-15\nUnemployment Rate\n1948-01-01\n\n\nUNRATENSA\n2024-12-15\n2024-12-15\nUnemployment Rate\n1948-01-01\n\n\nLNS14000006\n2024-12-15\n2024-12-15\nUnemployment Rate - Black or African American\n1972-01-01\n\n\nLNU04000006\n2024-12-15\n2024-12-15\nUnemployment Rate - Black or African American\n1972-01-01\n\n\nNROU\n2024-12-15\n2024-12-15\nNoncyclical Rate of Unemployment\n1949-01-01\n\n\nCAUR\n2024-12-15\n2024-12-15\nUnemployment Rate in California\n1976-01-01\n\n\n\n\n\n\n\n\nFilter for state-level unemployment rates\n\n\nCode\n# Filter for state-level unemployment rate series\nstate_unemployment_series &lt;- unemployment_search |&gt;\n  filter(grepl(\"unemployment rate\", title, ignore.case = TRUE)) |&gt;\n  filter(grepl(\"state\", title, ignore.case = TRUE))\n\n\n# Create the table and style it\nkable(head(state_unemployment_series[,1:5]), format = \"html\") |&gt;\n  kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),\n    full_width = FALSE\n  )\n\n\n\n\n\n\nid\nrealtime_start\nrealtime_end\ntitle\nobservation_start\n\n\n\n\nM0892AUSM156SNBR\n2024-12-15\n2024-12-15\nUnemployment Rate for United States\n1929-04-01\n\n\nQ0892BUSQ156SNBR\n2024-12-15\n2024-12-15\nUnemployment Rate for United States\n1940-04-01\n\n\nM0892BUSM156SNBR\n2024-12-15\n2024-12-15\nUnemployment Rate for United States\n1940-01-01\n\n\nM0892CUSM156NNBR\n2024-12-15\n2024-12-15\nUnemployment Rate for United States\n1947-01-01\n\n\nLRUN64TTUSQ156S\n2024-12-15\n2024-12-15\nInfra-Annual Labor Statistics: Unemployment Rate Total: From 15 to 64 Years for United States\n1970-01-01\n\n\nLRUN64TTUSM156S\n2024-12-15\n2024-12-15\nInfra-Annual Labor Statistics: Unemployment Rate Total: From 15 to 64 Years for United States\n1970-01-01\n\n\n\n\n\n\n\n\nFrom looking through this list, realized we need all the ids that start with the state abbreviation followed by “UR” - each of these series id’s gives us the unemployment for each state over time. The next step does additional filtering.\n\n\nCode\n# List of state abbreviations\nstate_abbreviations &lt;- c(\n  \"AL\", \"AK\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"FL\", \"GA\",\n  \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\",\n  \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\",\n  \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"RI\", \"SC\",\n  \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\"\n)\n\n# Filter for state unemployment series, need UR for seasonally adjusted\nstate_unemployment_series &lt;- unemployment_search |&gt;\n  filter(id %in% paste0(state_abbreviations, \"UR\"))\n\n# Create the table and style it\nkable(head(state_unemployment_series[,1:5]), format = \"html\") |&gt;\n  kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),\n    full_width = FALSE\n  )\n\n\n\n\n\n\nid\nrealtime_start\nrealtime_end\ntitle\nobservation_start\n\n\n\n\nCAUR\n2024-12-15\n2024-12-15\nUnemployment Rate in California\n1976-01-01\n\n\nTXUR\n2024-12-15\n2024-12-15\nUnemployment Rate in Texas\n1976-01-01\n\n\nNYUR\n2024-12-15\n2024-12-15\nUnemployment Rate in New York\n1976-01-01\n\n\nFLUR\n2024-12-15\n2024-12-15\nUnemployment Rate in Florida\n1976-01-01\n\n\nPAUR\n2024-12-15\n2024-12-15\nUnemployment Rate in Pennsylvania\n1976-01-01\n\n\nOHUR\n2024-12-15\n2024-12-15\nUnemployment Rate in Ohio\n1976-01-01\n\n\n\n\n\n\n\n\nUsing the filtered list of series IDs (as shown above) to fetch unemployment data for each state.\n\n\nCode\n# Fetch unemployment data for all states\nstate_unemployment_data &lt;- lapply(state_unemployment_series$id, function(series_id) {\n  fredr(\n    series_id = series_id,\n    observation_start = as.Date(\"2011-01-01\"),\n    observation_end = as.Date(\"2022-12-31\")\n  )\n})\n\n# Add state abbreviation to each dataframe\nstate_unemployment_data &lt;- mapply(\n  function(data, id) {\n    data$state &lt;- substr(id, 1, 2)  # Extract state abbreviation\n    data\n  },\n  state_unemployment_data,\n  state_unemployment_series$id,\n  SIMPLIFY = FALSE\n)\n\n# Combine into a single dataframe\nstate_unemployment_df &lt;- do.call(rbind, state_unemployment_data)\n\n# Create the table and style it\nkable(head(state_unemployment_df[,1:5]), format = \"html\") |&gt;\n  kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),\n    full_width = FALSE\n  )\n\n\n\n\n\n\ndate\nseries_id\nvalue\nrealtime_start\nrealtime_end\n\n\n\n\n2011-01-01\nCAUR\n12.3\n2024-12-15\n2024-12-15\n\n\n2011-02-01\nCAUR\n12.2\n2024-12-15\n2024-12-15\n\n\n2011-03-01\nCAUR\n12.1\n2024-12-15\n2024-12-15\n\n\n2011-04-01\nCAUR\n12.0\n2024-12-15\n2024-12-15\n\n\n2011-05-01\nCAUR\n12.0\n2024-12-15\n2024-12-15\n\n\n2011-06-01\nCAUR\n12.0\n2024-12-15\n2024-12-15\n\n\n\n\n\n\n\n\nCleaning up the data to keep only the relevant columns and compute yearly averages for each state from 2011 to 2022, which is the same process as outlined above, which we conduct for each dataset.\n\n\nCode\nlibrary(dplyr)\n\n# Clean and select relevant columns\nstate_unemployment_clean &lt;- state_unemployment_df |&gt;\n  select(state, date, value) |&gt;\n  rename(\n    unemployment_rate = value  # Rename value to unemployment_rate\n  ) |&gt;\n  mutate(\n    year = format(as.Date(date), \"%Y\")  # Extract year from the date\n  )\n\n# Compute yearly averages for each state\nstate_unemployment_yearly &lt;- state_unemployment_clean |&gt;\n  filter(year &gt;= 2011 & year &lt;= 2022) |&gt;\n  group_by(state, year) |&gt;\n  summarize(\n    avg_unemployment = mean(unemployment_rate, na.rm = TRUE),\n    .groups = \"drop\"\n  )\n\n# Create the table and style it\nkable(head(state_unemployment_yearly), format = \"html\") |&gt;\n  kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),\n    full_width = FALSE\n  )\n\n\n\n\n\n\nstate\nyear\navg_unemployment\n\n\n\n\nAK\n2011\n7.733333\n\n\nAK\n2012\n7.250000\n\n\nAK\n2013\n6.991667\n\n\nAK\n2014\n6.741667\n\n\nAK\n2015\n6.275000\n\n\nAK\n2016\n6.600000\n\n\n\n\n\n\n\n\nPerforming a check on the data we create a table showing the number of yearly records for each state. We can group the data by state and count the distinct years.\n\n\nCode\nlibrary(dplyr)\nlibrary(gt)\n\n# Count the number of years for each state\nstate_yearly_counts &lt;- state_unemployment_yearly |&gt;\n  group_by(state) |&gt;\n  summarize(\n    year_count = n(),  # Count the number of records (years)\n    .groups = \"drop\"\n  )\n\n# Create gt table\nstate_yearly_counts |&gt; \n  gt() |&gt; \n  tab_header(\n    title = \"Yearly Records Count by State\",\n    subtitle = \"Number of years with unemployment data (2011-2022)\"\n  )\n\n\n\n\n\n\n\n\nYearly Records Count by State\n\n\nNumber of years with unemployment data (2011-2022)\n\n\nstate\nyear_count\n\n\n\n\nAK\n12\n\n\nAL\n12\n\n\nAR\n12\n\n\nAZ\n12\n\n\nCA\n12\n\n\nCO\n12\n\n\nCT\n12\n\n\nDE\n12\n\n\nFL\n12\n\n\nGA\n12\n\n\nHI\n12\n\n\nIA\n12\n\n\nID\n12\n\n\nIL\n12\n\n\nIN\n12\n\n\nKS\n12\n\n\nKY\n12\n\n\nLA\n12\n\n\nMA\n12\n\n\nMD\n12\n\n\nME\n12\n\n\nMI\n12\n\n\nMN\n12\n\n\nMO\n12\n\n\nMS\n12\n\n\nMT\n12\n\n\nNC\n12\n\n\nND\n12\n\n\nNE\n12\n\n\nNH\n12\n\n\nNJ\n12\n\n\nNM\n12\n\n\nNV\n12\n\n\nNY\n12\n\n\nOH\n12\n\n\nOK\n12\n\n\nOR\n12\n\n\nPA\n12\n\n\nRI\n12\n\n\nSC\n12\n\n\nSD\n12\n\n\nTN\n12\n\n\nTX\n12\n\n\nUT\n12\n\n\nVA\n12\n\n\nVT\n12\n\n\nWA\n12\n\n\nWI\n12\n\n\nWV\n12\n\n\nWY\n12\n\n\n\n\n\n\n\nCode\n# Create the table and style it\nkable(head(state_yearly_counts), format = \"html\") |&gt;\n  kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),\n    full_width = FALSE\n  )\n\n\n\n\n\n\nstate\nyear_count\n\n\n\n\nAK\n12\n\n\nAL\n12\n\n\nAR\n12\n\n\nAZ\n12\n\n\nCA\n12\n\n\nCO\n12\n\n\n\n\n\n\n\n\nNow we create an interactive map using the data. The steps involve the following:\n\n\nCode\nlibrary(sf)\nlibrary(dplyr)\nlibrary(tmap)\nlibrary(tigris)\n\n#rename existing shapefile\nus_states &lt;- zip_sf  # This is already read in from your code\n\n#adjusting state column to match naming convention of state yearly unemployment table \nus_states &lt;- us_states |&gt;\n  mutate(state = STUSPS) \n\n#adjusting geometry for Alaska and Hawaii\nus_states &lt;- shift_geometry(\n  input_sf = us_states,\n  geoid_column = \"GEOID\",\n  preserve_area = FALSE, #scales Alaksa and Hawaii proportionately \n  position = \"below\" #places below continential US\n)\n\n#merging unemployment data with shapefile \nmap_data &lt;- us_states |&gt;\n  left_join(state_unemployment_yearly, by = \"state\")\n\n#remove rows with missing values in map_data\nmap_data &lt;- map_data |&gt;\n  filter(!is.na(year) & !is.na(avg_unemployment))\n\n#creating interactive map \n#tmap_mode(\"view\")  # Enable interactive mode for the map\n\ntm &lt;- tm_shape(map_data) +\n  tm_polygons(\n    col = \"avg_unemployment\",  # Column to use for shading\n    title = \"Unemployment Rate (%)\",\n    palette = \"Blues\",  # Color palette for the map\n    style = \"quantile\",  # Break the shading into quantiles\n    popup.vars = c(\"State\" = \"state\", \"Year\" = \"year\", \"Rate\" = \"avg_unemployment\")\n  ) +\n  tm_facets(by = \"year\") +  # Animate changes over years\n  tm_view(set.view = c(-98, 38, 4))  # Center and zoom the map on the US\n\n# Render the map\ntm\n\n\n\n\n\n\n\n\n\nThe visualization above helps answer the question of “What does unemployment look like over time?” by presenting a clear and dynamic picture of how unemployment has changed over time across the United States. The map highlights regional trends, such as states with persistently high or low unemployment, and captures national shifts, such as the overall increase in 2020 and decline thereafter.\nWhile this code was effective, I displayed the same results via an animation.\n\n\nCode\nlibrary(sf)\nlibrary(dplyr)\nlibrary(tmap)\nlibrary(tools)\nlibrary(gifski) \nlibrary(tigris)\n\n#rename existing shapefile\nus_states &lt;- zip_sf  # This is already read in from code\n\n#adjusting state column to match naming convention of state yearly unemployment table \nus_states &lt;- us_states |&gt;\n  mutate(state = STUSPS) \n\n#adjusting geometry for Alaska and Hawaii\nus_states &lt;- shift_geometry(\n  input_sf = us_states,\n  geoid_column = \"GEOID\",\n  preserve_area = FALSE, #scales Alaksa and Hawaii proportionately \n  position = \"below\" #places below continential US\n)\n\n#merging unemployment data with shapefile \nmap_data &lt;- us_states |&gt;\n  left_join(state_unemployment_yearly, by = \"state\")\n\n#remove rows with missing values in map_data\nmap_data &lt;- map_data |&gt;\n  filter(!is.na(year) & !is.na(avg_unemployment))\n\n#creating interactive map \ntmap_mode(\"plot\")  # This step is important - switch to static plotting mode\n\n#define color palette\nunemployment_palette &lt;- \"Blues\"\n\n#create animated map\nanim &lt;- (map_data) |&gt;\n  tm_shape() +\n  tm_polygons(\n    col = \"avg_unemployment\",         # Column for shading\n    title = \"Unemployment Rate (%)\", \n    palette = unemployment_palette,   # Color palette\n    style = \"quantile\"                # Quantile-based shading\n  ) +\n   tm_facets(along = \"year\", free.coords = FALSE) +\n  tm_text(\"state\", size = 0.5, col = \"white\", fontface = \"bold\") +  # Add state labels\n  tm_layout(\n    legend.outside = TRUE,                  # Place the legend outside the map\n    legend.outside.position = \"right\",     # Position the legend explicitly to the right\n    legend.text.size = 0.8,                # Adjust legend text size for clarity\n    legend.title.size = 1,                 # Adjust legend title size\n    frame = FALSE,                         # Remove border around the map\n    outer.margins = c(0.01, 0.01, 0.01, 0.08) # Add extra space to the right for the legend\n  ) + \n  tm_view(bbox = st_bbox(map_data) * c(1.2, 1.2, 1, 1)) \n\n\n# Generate the animated GIF\ntmap_animation(anim, delay = 50, filename = \"unemployment_animation-dec12.gif\")\n\n\n\n\nCode\nknitr::include_graphics(\"unemployment_animation-dec12.gif\")\n\n\n\n\n\n\n\n\n\nThis animated map provides a clear and intuitive answer to the question “What does unemployment look like over time?” by offering a visual representation of unemployment trends across the United States from one year to the next. The map uses color shading to show the unemployment rate for each state, with darker shades indicating higher unemployment and lighter shades representing lower rates. By watching the animation, viewers can easily observe how unemployment changes over time, on a national and state level.\nThe animation highlights major patterns, such as regions that experience persistently high or low unemployment and signifcant countrywide shifts, such as in 2020, which we know can be attributed to the COVID-19 pandemic.\nThis visual contributes to our overarching question in a fashion of not visually showcasing the “what” of unemployment trends but specifically the “where” and “when”.\n\nCreating an additional visualization where we compare average unemployment rates from 2011 to 2022 statewide against countrywide\n\n\nCode\n# Load necessary library\nlibrary(ggplot2)\nlibrary(ggrepel) #for better placement of text labels \n\n#ensuring year is treated as numeric due to plotting issies \nstate_unemployment_yearly$year &lt;- as.numeric(state_unemployment_yearly$year)\nCW_unemployment_yearly$year &lt;- as.numeric(CW_unemployment_yearly$year)\n\n# Labeling 2 max and 2 min 2011 unemployment states, too much overlap to label all \nextreme_states_2011 &lt;- state_unemployment_yearly |&gt;\n  filter(year == 2011) |&gt;\n  arrange(avg_unemployment) |&gt;\n  slice(c(1:2, (n() - 1):n())) #2 min and 2 max states \n\n# Create the plot\nggplot() +\n  # Add state unemployment lines\n  geom_line(\n    data = state_unemployment_yearly, \n    aes(x = year, y = avg_unemployment, group = state), \n    color = \"gray\", size = 0.5, alpha = 0.7\n  ) +\n  #Adding New York unemployment line in light red \n  geom_line(\n    data = state_unemployment_yearly |&gt; filter(state == \"NY\"),\n    aes(x = year, y = avg_unemployment, color = \"New York\"),\n    size = 0.8\n  ) +\n  # Add countrywide average unemployment line\n  geom_line(\n    data = CW_unemployment_yearly, \n    aes(x = year, y = average_unemployment), \n    color = \"black\", size = 1.5\n  ) +\n  # Add state labels for 2 max and 2 min states in 2011 \n  geom_text_repel(\n    data = extreme_states_2011,\n    aes(x = 2011, y = avg_unemployment, label = state),\n    size = 3, color = \"gray\", hjust = 1.2, #pushes labels slightly left\n  ) +\n  # Set x-axis to whole years\n  scale_x_continuous(breaks = seq(2011, 2022, by = 1), limits = c(2011, 2023)) +\n  # Adjust y-axis zoom (set appropriate limits as needed)\n  scale_y_continuous(limits = c(2, 14)) + #zooms in on the unemployment range \n  # Add labels, title and legend\n  labs(\n    title = \"Unemployment Rates by State and Countrywide (2011-2022)\",\n    x = \"Year\",\n    y = \"Unemployment Rate (%)\",\n    color = \"Legend\"\n  ) +\n  # Define colors for legend\n  scale_color_manual(\n    values = c(\"Other States\" = \"gray\", \"New York\" = \"red\", \"Countrywide\"=\"black\")\n  ) +\n  # Adjust the theme for clarity\n  theme_minimal() +\n  theme(\n    plot.title = element_text(\n      hjust = 0.5,             # Center the title\n      size = 14,               # Increase title size\n      margin = margin(b = 20)  # Add space below the title\n    ),\n    axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels\n    legend.position = \"right\",              # Move the legend to the right\n    legend.box = \"vertical\",                # Arrange the legend vertically\n    legend.text = element_text(size = 8),\n    legend.title = element_text(size = 9),\n    legend.margin = margin(t = 10, b = 10, unit = \"pt\"), # Add internal space in the legend\n    legend.spacing.y = unit(5, \"pt\"),                   # Add vertical spacing between legend items\n    plot.margin = margin(t = 30, r = 50, b = 20, l = 20, unit = \"pt\") # Adjust margins for spacing\n  )\n\n\n\n\n\n\n\n\n\nDue to several issues with the legend displaying each field, we added a few legend override fields to ensure each of the 3 lines and their labels appeared in the legend.\n\n\nCode\nggplot() +\n  geom_line(\n    data = state_unemployment_yearly, \n    aes(x = year, y = avg_unemployment, group = state, color = \"Other States\"), \n    size = 0.5, alpha = 0.7\n  ) +\n  geom_line(\n    data = state_unemployment_yearly |&gt; filter(state == \"NY\"), \n    aes(x = year, y = avg_unemployment, color = \"New York\"), \n    size = 0.8\n  ) +\n  geom_line(\n    data = CW_unemployment_yearly, \n    aes(x = year, y = average_unemployment, color = \"Countrywide\"), \n    size = 1.5\n  ) +\n  scale_x_continuous(breaks = seq(2011, 2022, by = 1), limits = c(2011, 2023)) +\n  scale_y_continuous(limits = c(2, 14)) +\n  labs(\n    title = \"Unemployment Rates by State and Countrywide (2011-2022)\",\n    x = \"Year\",\n    y = \"Unemployment Rate (%)\",\n    color = \"Legend\"\n  ) +\n  scale_color_manual(\n    values = c(\n      \"Other States\" = \"gray\",\n      \"New York\" = \"red\",\n      \"Countrywide\" = \"black\"\n    ),\n    breaks = c(\"Other States\", \"New York\", \"Countrywide\"),\n    labels = c(\"Other States\", \"New York\", \"Countrywide\")\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 14, margin = margin(b = 10)),\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.position = \"right\",\n    legend.box = \"vertical\",\n    legend.text = element_text(size = 8),\n    legend.title = element_text(size = 9),\n    plot.margin = margin(t = 30, r = 50, b = 20, l = 20, unit = \"pt\")\n  ) +\n  guides(\n    color = guide_legend(override.aes = list(\n      linetype = c(\"solid\", \"solid\", \"solid\"),\n      size = c(0.5, 0.8, 1.5),\n      color = c(\"gray\", \"red\", \"black\")\n    ))\n  )\n\n\n\n\n\n\n\n\n\nThis visualization is the same data as the animated visualization - average yearly unemployment rates for each state and the United States overall from 2011 to 2022. This visualization draws focus to New York and the Countrywide average through the red and black lines, respectively. This layered design makes it easy to compare New York’s performance against the broader trends at both the state and national levels.\nThis chart shows a steady decline in unemployment across most states, including New York, from 2011 until 2020. The sharp spike in 2020 reflects the impact of the COVID-19 pandemic, which we have now seen several times throughout the data.\nAn interesting result is how closely New York’s average unemployment follows to the countrywide unemployment rates up until 2020, when the pandemic took place. Many of us were a part of, or know of, the drastic economic effect the pandemic had on New York City, which encompasses much of the population and economy of New York state. We also see that, since then, New York has still remained above the countrywide unemployment level, which can perhaps be attributed to the post-pandemic continued attempt at economic recovery.\n\nWe now explore different demographics on a countrywide level, keeping in mind our input variables for our predictive model: gender, race, and education.\nRace\nUnemployment Rate - Black or African American\n\n\nCode\nlibrary(dplyr)\n\nblack_unemployment_data &lt;- fredr_series_observations(series_id = \"LNS14000006\")\n\n# Filter the data for the desired range\nblack_unemployment_data_filtered &lt;- black_unemployment_data |&gt;\n  filter(date &gt;= as.Date(\"2011-01-01\") & date &lt; as.Date(\"2023-01-01\"))\n\nblack_unemployment_yearly &lt;- black_unemployment_data_filtered |&gt;\n    mutate(year = lubridate::year(date)) |&gt;\n    group_by(year) |&gt;\n    summarize(average_unemployment = mean(value))\n\n# Create the table and style it\nkable(head(black_unemployment_yearly), format = \"html\") |&gt;\n  kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),\n    full_width = FALSE\n  )\n\n\n\n\n\n\nyear\naverage_unemployment\n\n\n\n\n2011\n15.825000\n\n\n2012\n13.825000\n\n\n2013\n13.066667\n\n\n2014\n11.341667\n\n\n2015\n9.558333\n\n\n2016\n8.425000\n\n\n\n\n\n\n\n\n\nU.S. Bureau of Labor Statistics, Unemployment Rate - Black or African American [LNS14000006], retrieved from FRED, Federal Reserve Bank of St. Louis; https://fred.stlouisfed.org/series/LNS14000006, December 8, 2024\n\nCreating an area chart as a visually appealing way to emphasize the changing rates of Black and African American unemployment over time.\n\n\nCode\nlibrary(ggplot2)\nggplot(data = black_unemployment_yearly, aes(x = year, y = average_unemployment)) +\n  geom_area(fill = \"lightblue\", alpha = 0.6) +\n  geom_line(color = \"blue\", size = 1) +\n  labs(\n    title = \"US Black and African American Unemployment Rates Over Time\",\n    x = \"Year\",\n    y = \"Average Unemployment Rate (%)\"\n  ) +\n  theme_minimal() + \n   theme(\n    plot.title = element_text(size = 16, face = \"bold\"),  # Adjust title size\n    axis.text.x = element_text(size = 10),  # Adjust x-axis label size\n    axis.title.x = element_text(size = 12),  # Adjust x-axis title size\n    axis.text.y = element_text(size = 10),  # Adjust y-axis label size\n    axis.title.y = element_text(size = 12)  # Adjust y-axis title size\n  ) +\n  scale_x_continuous(\n    breaks = seq(2011, 2022, by = 1)  # Display only whole years\n  )\n\n\n\n\n\n\n\n\n\nThe below code involves downloading, extracting and loading a US states shapefile from the US Census Bureau.\n\n\nCode\nlibrary(tmap)\nlibrary(sf)\nlibrary(dplyr)\nlibrary(tigris)\nlibrary(tools)\nlibrary(gifski)\n\n#adjusting geometry in us_states for Alaska and Hawaii \nus_states &lt;- shift_geometry(\n  input_sf = us_states,\n  geoid_column = \"GEOID\",\n  preserve_area = FALSE, #scales Alaska and Hawaii proportionately\n  position = \"below\" #places AK and HI underneath continental US\n)\n\n# Perform a cartesian join to apply the same rate to all states for each year\nblack_unemployment_map_data &lt;- us_states |&gt;\n    mutate(key = 1) |&gt;  # Add a key for the cartesian join\n    left_join(\n        black_unemployment_yearly |&gt; mutate(key = 1), \n        by = \"key\"\n    ) |&gt;\n    select(geometry, year, average_unemployment)\n\n#remove rows with missing values in map_data\nblack_unemployment_map_data &lt;- black_unemployment_map_data |&gt;\n  filter(!is.na(year) & !is.na(average_unemployment))\n\n# Step 3: Set `tmap` mode to plot (required for animation)\ntmap_mode(\"plot\")\n\n# Step 4: Create the animated map\nus_map &lt;- tm_shape(black_unemployment_map_data) +\n    tm_polygons(\n        col = \"average_unemployment\",  # Column for shading\n        title = \"Unemployment Rate (%)\",\n        palette = \"YlOrRd\",  # Color palette\n        style = \"quantile\",  # Break into quantiles\n        popup.vars = c(\n            \"Year\" = \"year\",\n            \"Unemployment Rate\" = \"average_unemployment\"\n        )\n    ) +\n    tm_facets(along = \"year\") +  # Animate over years\n    tm_layout(\n        title = \"Black Unemployment Rates in the US (2011–2022)\",\n        legend.outside = TRUE,\n        frame = FALSE\n    ) \n\n# Step 5: Create animation\ntmap_animation(\n    us_map,\n    delay = 50,  # Delay between frames in milliseconds\n    filename = \"black_unemployment.gif\")\n\n\n\n\nCode\nknitr::include_graphics(\"black_unemployment.gif\")\n\n\n\n\n\n\n\n\n\nWhite unemployment rates\n\n\nCode\nlibrary(dplyr)\n\nwhite_unemployment_data &lt;- fredr_series_observations(series_id = \"LNS14000003\")\n\n# Filter the data for the desired range\nwhite_unemployment_data_filtered &lt;- white_unemployment_data |&gt;\n  filter(date &gt;= as.Date(\"2011-01-01\") & date &lt; as.Date(\"2023-01-01\"))\n\nwhite_unemployment_yearly &lt;- white_unemployment_data_filtered |&gt;\n    mutate(year = lubridate::year(date)) |&gt;\n    group_by(year) |&gt;\n    summarize(average_unemployment = mean(value))\n\n\n\n\nCode\nlibrary(ggplot2)\n\n# Combine both datasets into a single table for easier plotting\ncombined_unemployment &lt;- rbind(\n  black_unemployment_yearly |&gt; mutate(group = \"Black\"),\n  white_unemployment_yearly |&gt; mutate(group = \"White\")\n)\n\n# Creating bar chart\nggplot(combined_unemployment, aes(x = factor(year), y = average_unemployment, fill = group)) +\n  geom_bar(stat = \"identity\", position = \"dodge\") +  # Side-by-side bars\n  scale_fill_manual(values = c(\"Black\" = \"blue\", \"White\" = \"red\")) +\n  labs(\n    title = \"Comparison of Black and White Unemployment Rates by Year (2011–2022)\",\n    x = \"Year\",\n    y = \"Average Unemployment Rate (%)\",\n    fill = \"Group\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(size = 16, face = \"bold\"),\n    legend.position = \"top\",\n    axis.text.x = element_text(angle = 45, hjust = 1)\n  )\n\n\n\n\n\n\n\n\n\nHispanic or Latino Unemployment Rates\n\n\nCode\nhispanic_unemployment_data &lt;- fredr_series_observations(series_id = \"LNS14000009\")\n\n# Filter the data for the desired range\nhispanic_unemployment_data_filtered &lt;- hispanic_unemployment_data |&gt;\n  filter(date &gt;= as.Date(\"2011-01-01\") & date &lt; as.Date(\"2023-01-01\"))\n\nhispanic_unemployment_yearly &lt;- hispanic_unemployment_data_filtered |&gt;\n    mutate(year = lubridate::year(date)) |&gt;\n    group_by(year) |&gt;\n    summarize(average_unemployment = mean(value))\n\n# Create the table and style it\nkable(head(hispanic_unemployment_yearly), format = \"html\") |&gt;\n  kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),\n    full_width = FALSE\n  )\n\n\n\n\n\n\nyear\naverage_unemployment\n\n\n\n\n2011\n11.491667\n\n\n2012\n10.316667\n\n\n2013\n9.108333\n\n\n2014\n7.400000\n\n\n2015\n6.600000\n\n\n2016\n5.766667\n\n\n\n\n\n\n\n\nAsian Unemployment Rates\n\n\nCode\nlibrary(dplyr)\n\nasian_unemployment_data &lt;- fredr_series_observations(series_id = \"LNS14032183\")\n\n# Filter the data for the desired range\nasian_unemployment_data_filtered &lt;- asian_unemployment_data |&gt;\n  filter(date &gt;= as.Date(\"2011-01-01\") & date &lt; as.Date(\"2023-01-01\"))\n\nasian_unemployment_yearly &lt;- asian_unemployment_data_filtered |&gt;\n    mutate(year = lubridate::year(date)) |&gt;\n    group_by(year) |&gt;\n    summarize(average_unemployment = mean(value))\n\n# Create the table and style it\nkable(head(asian_unemployment_yearly), format = \"html\") |&gt;\n  kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),\n    full_width = FALSE\n  )\n\n\n\n\n\n\nyear\naverage_unemployment\n\n\n\n\n2011\n7.016667\n\n\n2012\n5.900000\n\n\n2013\n5.225000\n\n\n2014\n4.983333\n\n\n2015\n3.825000\n\n\n2016\n3.641667\n\n\n\n\n\n\n\n\nLets take a look at a faceted line plot to explore the differences in unemployment rates across each race.\n\n\nCode\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Add a 'group' column to each dataset\nCW_unemployment_yearly$group &lt;- \"Countrywide Average\"\nblack_unemployment_yearly$group &lt;- \"Black\"\nasian_unemployment_yearly$group &lt;- \"Asian\"\nhispanic_unemployment_yearly$group &lt;- \"Hispanic\"\nwhite_unemployment_yearly$group &lt;- \"White\"\n\n# Combine all datasets into one\ncombined_racial_unemployment &lt;- bind_rows(\n  CW_unemployment_yearly,\n  black_unemployment_yearly,\n  asian_unemployment_yearly,\n  hispanic_unemployment_yearly,\n  white_unemployment_yearly\n)\n\n# Create the faceted line plot\nggplot(data = combined_racial_unemployment, aes(x = year, y = average_unemployment)) +\n  geom_line(aes(color = group), size = 1) +  # Line for each group\n  scale_color_manual(\n    values = c(\n      \"Countrywide Average\" = \"black\",\n      \"Black\" = \"blue\",\n      \"Asian\" = \"green\",\n      \"Hispanic\" = \"orange\",\n      \"White\" = \"red\"\n    )\n  ) +\n  facet_wrap(~ group, ncol = 1, scales = \"fixed\") +  # Facet by group\n  scale_x_continuous(\n    breaks = seq(2011, 2022, by=1), #display each year\n    limits = c(2011,2022)\n  ) +\n  labs(\n    title = \"Racial Unemployment Trends (2011-2022)\",\n    x = \"Year\",\n    y = \"Unemployment Rate (%)\",\n    color = \"Group\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 16),  # Center and size the title\n    axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels\n    legend.position = \"none\", #no legend\n    strip.text = element_text(size = 12) #adjusts facet labels \n  )\n\n\n\n\n\n\n\n\n\nFacets do not get our point across, so switching over to a line plot.\n\n\nCode\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Add a 'group' column to each dataset\nCW_unemployment_yearly$group &lt;- \"Countrywide Average\"\nblack_unemployment_yearly$group &lt;- \"Black\"\nasian_unemployment_yearly$group &lt;- \"Asian\"\nhispanic_unemployment_yearly$group &lt;- \"Hispanic\"\nwhite_unemployment_yearly$group &lt;- \"White\"\n\n# Combine all datasets into one\ncombined_racial_unemployment &lt;- bind_rows(\n  CW_unemployment_yearly,\n  black_unemployment_yearly,\n  asian_unemployment_yearly,\n  hispanic_unemployment_yearly,\n  white_unemployment_yearly\n)\n\n# Create a single-panel line plot\nggplot(data = combined_racial_unemployment, aes(x = year, y = average_unemployment, color = group)) +\n  geom_line(data = combined_racial_unemployment |&gt; filter(group == \"Countrywide Average\"), size = 4) +  # Bold line for countrywide average\n  geom_line(data = combined_racial_unemployment |&gt; filter(group != \"Countrywide Average\"), size = .6) +  # Normal lines for other groups\n  scale_color_manual(\n    values = c(\n      \"Countrywide Average\" = \"grey\",\n      \"Black\" = \"blue\",\n      \"Asian\" = \"green\",\n      \"Hispanic\" = \"orange\",\n      \"White\" = \"red\"\n    )\n  ) +\n  scale_x_continuous(\n    breaks = seq(2011, 2022, by = 1),  # Display each year as a tick\n    limits = c(2011, 2022)\n  ) +\n  scale_y_continuous(limits = c(0, 15)) +  # Adjust y-axis range as needed\n  labs(\n    title = \"Unemployment Trends by Race (2011-2022)\",\n    x = \"Year\",\n    y = \"Unemployment Rate (%)\",\n    color = \"Group\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 16),  # Center the title\n    axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels\n  )\n\n\n\n\n\n\n\n\n\nThis visualization explores one of the three demographic factors, race, which we chose to explore as an attempt at drawing conclusions to our overarching question of what demographic factors best explain NYC’s unemployment trends.\nThis visual gives us insight into the unemployment trends across racial groups in the United States from 2011 to 2022, and perhaps sheds light to how unemployment disproportionately impacts marginalized groups.\nThe gray line represents the countrywide average unemployment rate, displayed prominently for context. The colored lines represent unemployment trends for specific racial groups: Black (blue), Hispanic (orange), White (red), and Asian (green).\nThe chart reveals several insights. First, unemployment rates for Black individuals consistently remain higher than those for other groups and the countrywide average. Hispanic unemployment rates generally follow a similar trajectory but at slightly lower levels. On the other hand, Asian and White unemployment rates tend to stay below the countrywide average, indicating comparitively lower unemployment levels for these groups overall.\nThis gives us our first into race as one of our three demographic factors we continue to explore through each analytical question.\n\nLets look at black vs white specifically, to see if our results line up with the article we used as motivation for our topic. This generates a visualization which shows the difference between black and white specific unemployment rates against the countrywide average over time.\n\n\nCode\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Filter the combined_racial_unemployment table\nfiltered_unemployment &lt;- combined_racial_unemployment |&gt;\n  filter(group %in% c(\"Countrywide Average\", \"Black\", \"White\"))\n\n# Create a new data frame for the segments\nsegments_unemployment &lt;- filtered_unemployment |&gt;\n  filter(group != \"Countrywide Average\") |&gt;\n  left_join(filtered_unemployment |&gt; filter(group == \"Countrywide Average\"), by = \"year\", suffix = c(\"\", \"_avg\")) |&gt;\n  select(year, group, average_unemployment, average_unemployment_avg)\n\n# Create the plot\nggplot(filtered_unemployment, aes(x = year, y = average_unemployment, color = group)) +\n  geom_line(size = 1.2) +\n  geom_point(size = 2) +\n  geom_segment(data = segments_unemployment, aes(x = year, xend = year, y = average_unemployment, yend = average_unemployment_avg), linetype = \"dashed\", size = 0.8) +\n  theme_minimal() +\n  labs(title = \"Unemployment Rates and Differences from Countrywide Average\",\n       x = \"Year\",\n       y = \"Unemployment Rate\",\n       color = \"Group\") +\n  scale_color_manual(values = c(\"Countrywide Average\" = \"grey\", \"Black\" = \"blue\", \"White\" = \"red\")) +\n  scale_x_continuous(breaks = seq(2011, 2022, by = 1)) +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 16),  # Center the title\n    axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels\n  )\n\n\n\n\n\n\n\n\n\nThis visualization highlights unemployment rates over time for black, white and the countrywide average groups, which we find in other visualizations as well. This visual specifically highlights the gaps between each group’s rates and the national average with dashed lines. The blue line for Black unemployment rates consistently remains above both the national average (grey line) and White unemployment rates (red line), illustrating a persistent disparity.\nThis analysis contributes to our overall study by showcasing the persistent impact of race as a key factor in unemployment disparities. While this chart focuses on nationwide data, it provides a framework for understnading how similar trends might manifest within NYC. Identifying such disparities at the national level sets the stage for further analysis to explore whether similar racial gaps exist in NYC’s unemployment data, helping to answer the overarching question about the demographic factors driving these trends.\n\n\n\nCode\n# Print the table using gt\ndifference_table |&gt;\n  gt() |&gt;\n  tab_header(\n    title = \"Yearly Differences in Unemployment Rates\",\n    subtitle = \"Black vs. White (2011-2022)\"\n  ) \n  cols_label(\n    year = \"Year\",\n    difference = \"Difference (Black - White)\"\n  ) |&gt;\n  fmt_number(\n    columns = difference,\n    decimals = 2\n  ) |&gt;\n  tab_options(\n    table.font.size = px(12),\n    heading.title.font.size = px(16),\n    heading.subtitle.font.size = px(14)\n  )\n\n\n\n\nCode\n# Step 1: Create the base gt table\ntable &lt;- difference_table |&gt;\n  gt()\n\n# Step 2: Add column labels\nlabeled_table &lt;- table |&gt;\n  cols_label(\n    year = \"Year\",\n    difference = \"Difference (Black - White)\"\n  )\n\n# Step 3: Add the rest of the styling and formatting\nfinal_table &lt;- labeled_table |&gt;\n  tab_header(\n    title = \"Yearly Differences in Unemployment Rates\",\n    subtitle = \"Black vs. White (2011-2022)\"\n  ) |&gt;\n  fmt_number(\n    columns = difference,\n    decimals = 2\n  ) |&gt;\n  tab_options(\n    table.font.size = px(12),\n    heading.title.font.size = px(16),\n    heading.subtitle.font.size = px(14)\n  )\n\n# Print the final table\nprint(final_table)\n\n\nGender\nPulling gender based US historic seasonally adjusted unemployment rates.\nBelow pulls the seasonally adjusted unemployment percentage for women aged 20 years & older.\n\n\nCode\nlibrary(dplyr)\n\nwomen_unemployment_data &lt;- fredr_series_observations(series_id = \"LNS14000026\")\n\n# Filter the data for the desired range\nwomen_unemployment_data_filtered &lt;- women_unemployment_data |&gt;\n  filter(date &gt;= as.Date(\"2011-01-01\") & date &lt; as.Date(\"2023-01-01\"))\n\nwomen_unemployment_yearly &lt;- women_unemployment_data_filtered |&gt;\n    mutate(year = lubridate::year(date)) |&gt;\n    group_by(year) |&gt;\n    summarize(average_unemployment = mean(value))\n\n# Create the table and style it\nkable(head(women_unemployment_yearly), format = \"html\") |&gt;\n  kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),\n    full_width = FALSE\n  )\n\n\n\n\n\n\nyear\naverage_unemployment\n\n\n\n\n2011\n7.916667\n\n\n2012\n7.341667\n\n\n2013\n6.533333\n\n\n2014\n5.591667\n\n\n2015\n4.775000\n\n\n2016\n4.408333\n\n\n\n\n\n\n\n\nBelow pulls the seasonally adjusted unemployment percentage for men aged 20 years & older.\n\n\nCode\nlibrary(dplyr)\n\nmen_unemployment_data &lt;- fredr_series_observations(series_id = \"LNS14000025\")\n\n# Filter the data for the desired range\nmen_unemployment_data_filtered &lt;- men_unemployment_data |&gt;\n  filter(date &gt;= as.Date(\"2011-01-01\") & date &lt; as.Date(\"2023-01-01\"))\n\nmen_unemployment_yearly &lt;- men_unemployment_data_filtered |&gt;\n    mutate(year = lubridate::year(date)) |&gt;\n    group_by(year) |&gt;\n    summarize(average_unemployment = mean(value))\n\n# Create the table and style it\nkable(head(men_unemployment_yearly), format = \"html\") |&gt;\n  kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),\n    full_width = FALSE\n  )\n\n\n\n\n\n\nyear\naverage_unemployment\n\n\n\n\n2011\n8.700000\n\n\n2012\n7.525000\n\n\n2013\n6.975000\n\n\n2014\n5.708333\n\n\n2015\n4.908333\n\n\n2016\n4.508333\n\n\n\n\n\n\n\n\nNow taking a look at the average unemployment by gender compared to the countrywide average from 2011-2022.\nFirst to prepare the data we combine our women_unemployment_yearly, men_unemployment_yearly, and CW_unemployment_yearly into one dataset, to later create visualizations off of.\n\n\nCode\n# Add 'group' column to women and men unemployment datasets\nwomen_unemployment_yearly &lt;- women_unemployment_yearly |&gt;\n  mutate(group = \"Women\")\n\nmen_unemployment_yearly &lt;- men_unemployment_yearly |&gt;\n  mutate(group = \"Men\")\n\n# Combine datasets\ncombined_gender_unemployment &lt;- bind_rows(\n  women_unemployment_yearly,\n  men_unemployment_yearly,\n  CW_unemployment_yearly\n)\n\n\nNext we create an Animated Line Plot, which shows unemployment trends for men, women and countrywide averages over time.\n\n\nCode\nlibrary(ggplot2)\nlibrary(gganimate)\nlibrary(gifski)\nlibrary(dplyr)\n\n# Create the animation with `transition_reveal()`\nanimated_plot &lt;- ggplot(combined_gender_unemployment, aes(x = year, y = average_unemployment, color = group, group = group)) +\n  geom_line(data = combined_gender_unemployment, size = 1.2) +\n  geom_line(data = combined_gender_unemployment |&gt; filter(group == \"Countrywide Average\"), size=2.5\n  ) +\n  scale_color_manual(values = c(\"Men\" = \"blue\", \"Women\" = \"red\", \"Countrywide Average\" = \"black\")) +\n  labs(\n    title = \"Unemployment Trends by Gender and Countrywide (2011-2022)\",\n    x = \"Year\",\n    y = \"Unemployment Rate (%)\",\n    color = \"Group\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, size = 16),\n    axis.text.x = element_text(angle = 45, hjust = 1)\n  ) +\n  transition_reveal(year)  # Incrementally draw the lines over time\n\n\n# Render and save the animation\nanimate(\n  animated_plot,\n  width = 800,\n  height = 600,\n  duration = 10,  # Duration of the animation in seconds\n  fps = 10,       # Frames per second\n  renderer = gifski_renderer(\"gender_unemployment_trends_reveal.gif\")\n)\n\n\n\n\n\n\n\n\n\n\n\nWe notice a shortcoming in our data from the results of this plot. You will find the CW average unemployment from 2011-2022 (bold black line) is consistently above both men and women’s average unemployment rate, year over year. We would expect to see this line fall in the middle, considering men and women make up the countrywide unemployment rate.\nThis may be explained by the data which was available in FRED. The countrywide unemployment rate is for all working ages (16 and older), while the gender specific unemployment rates were only available for ages 20 and up.\nGender x Race\nBlack or African Men, 20 yrs & older\n\n\nCode\nlibrary(dplyr)\n\nblack_men_unemployment_data &lt;- fredr_series_observations(series_id = \"LNS14000031\")\n\n# Filter the data for the desired range\nblack_men_unemployment_data_filtered &lt;- black_men_unemployment_data |&gt;\n  filter(date &gt;= as.Date(\"2011-01-01\") & date &lt; as.Date(\"2023-01-01\"))\n\nblack_men_unemployment_yearly &lt;- black_men_unemployment_data_filtered |&gt;\n    mutate(year = lubridate::year(date)) |&gt;\n    group_by(year) |&gt;\n    summarize(average_unemployment = mean(value))\n\n# Create the table and style it\nkable(head(black_men_unemployment_yearly), format = \"html\") |&gt;\n  kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),\n    full_width = FALSE\n  )\n\n\n\n\n\n\nyear\naverage_unemployment\n\n\n\n\n2011\n16.725000\n\n\n2012\n13.950000\n\n\n2013\n12.891667\n\n\n2014\n11.325000\n\n\n2015\n9.516667\n\n\n2016\n8.225000\n\n\n\n\n\n\n\n\nBlack or African American Women, 20 yrs & older\n\n\nCode\nlibrary(dplyr)\n\nblack_women_unemployment_data &lt;- fredr_series_observations(series_id = \"LNS14000032\")\n\n# Filter the data for the desired range\nblack_women_unemployment_data_filtered &lt;- black_women_unemployment_data |&gt;\n  filter(date &gt;= as.Date(\"2011-01-01\") & date &lt; as.Date(\"2023-01-01\"))\n\nblack_women_unemployment_yearly &lt;- black_women_unemployment_data_filtered |&gt;\n    mutate(year = lubridate::year(date)) |&gt;\n    group_by(year) |&gt;\n    summarize(average_unemployment = mean(value))\n\n# Create the table and style it\nkable(head(black_women_unemployment_yearly), format = \"html\") |&gt;\n  kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),\n    full_width = FALSE\n  )\n\n\n\n\n\n\nyear\naverage_unemployment\n\n\n\n\n2011\n13.200000\n\n\n2012\n11.850000\n\n\n2013\n11.308333\n\n\n2014\n9.825000\n\n\n2015\n8.258333\n\n\n2016\n7.291667\n\n\n\n\n\n\n\n\nHispanic or latino men, 20 yrs. & older\n\n\nCode\nlibrary(dplyr)\n\nhispanic_men_unemployment_data &lt;- fredr_series_observations(series_id = \"LNU04000034\")\n\n# Filter the data for the desired range\nhispanic_men_unemployment_data_filtered &lt;- hispanic_men_unemployment_data |&gt;\n  filter(date &gt;= as.Date(\"2011-01-01\") & date &lt; as.Date(\"2023-01-01\"))\n\nhispanic_men_unemployment_yearly &lt;- hispanic_men_unemployment_data_filtered |&gt;\n    mutate(year = lubridate::year(date)) |&gt;\n    group_by(year) |&gt;\n    summarize(average_unemployment = mean(value))\n\n# Create the table and style it\nkable(head(hispanic_men_unemployment_yearly), format = \"html\") |&gt;\n  kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),\n    full_width = FALSE\n  )\n\n\n\n\n\n\nyear\naverage_unemployment\n\n\n\n\n2011\n10.333333\n\n\n2012\n8.916667\n\n\n2013\n7.941667\n\n\n2014\n6.166667\n\n\n2015\n5.683333\n\n\n2016\n4.875000\n\n\n\n\n\n\n\n\nHispanic or latino women, 20 yrs. & older\n\n\nCode\nlibrary(dplyr)\n\nhispanic_women_unemployment_data &lt;- fredr_series_observations(series_id = \"LNU04000035\")\n\n# Filter the data for the desired range\nhispanic_women_unemployment_data_filtered &lt;- hispanic_women_unemployment_data |&gt;\n  filter(date &gt;= as.Date(\"2011-01-01\") & date &lt; as.Date(\"2023-01-01\"))\n\nhispanic_women_unemployment_yearly &lt;- hispanic_women_unemployment_data_filtered |&gt;\n    mutate(year = lubridate::year(date)) |&gt;\n    group_by(year) |&gt;\n    summarize(average_unemployment = mean(value))\n\n# Create the table and style it\nkable(head(hispanic_women_unemployment_yearly), format = \"html\") |&gt;\n  kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),\n    full_width = FALSE\n  )\n\n\n\n\n\n\nyear\naverage_unemployment\n\n\n\n\n2011\n11.066667\n\n\n2012\n10.100000\n\n\n2013\n8.633333\n\n\n2014\n7.491667\n\n\n2015\n6.491667\n\n\n2016\n5.791667\n\n\n\n\n\n\n\n\nWhite men, 20 yrs & older\n\n\nCode\nlibrary(dplyr)\n\nwhite_men_unemployment_data &lt;- fredr_series_observations(series_id = \"LNS14000028\")\n\n# Filter the data for the desired range\nwhite_men_unemployment_data_filtered &lt;- white_men_unemployment_data |&gt;\n  filter(date &gt;= as.Date(\"2011-01-01\") & date &lt; as.Date(\"2023-01-01\"))\n\nwhite_men_unemployment_yearly &lt;- white_men_unemployment_data_filtered |&gt;\n    mutate(year = lubridate::year(date)) |&gt;\n    group_by(year) |&gt;\n    summarize(average_unemployment = mean(value))\n\n# Create the table and style it\nkable(head(white_men_unemployment_yearly), format = \"html\") |&gt;\n  kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),\n    full_width = FALSE\n  )\n\n\n\n\n\n\nyear\naverage_unemployment\n\n\n\n\n2011\n7.725000\n\n\n2012\n6.725000\n\n\n2013\n6.191667\n\n\n2014\n4.841667\n\n\n2015\n4.250000\n\n\n2016\n3.975000\n\n\n\n\n\n\n\n\nTo see which racial groups are most marginally effected by unemployment for men, we create the following heatmap.\n\n\nCode\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(dplyr)\n\n# Add a 'group' column to each dataset\nmen_unemployment_yearly &lt;- men_unemployment_yearly |&gt;\n  rename(unemployment_rate = average_unemployment) |&gt;\n  mutate(group = \"Men Overall\")\n\nblack_men_unemployment_yearly &lt;- black_men_unemployment_yearly |&gt;\n  rename(unemployment_rate = average_unemployment) |&gt;\n  mutate(group = \"Black Men\")\n\nhispanic_men_unemployment_yearly &lt;- hispanic_men_unemployment_yearly |&gt;\n  rename(unemployment_rate = average_unemployment) |&gt;\n  mutate(group = \"Hispanic Men\")\n\nwhite_men_unemployment_yearly &lt;- white_men_unemployment_yearly |&gt;\n  rename(unemployment_rate = average_unemployment) |&gt;\n  mutate(group = \"White Men\")\n\n# Combine all datasets into one\ncombined_unemployment_men &lt;- bind_rows(\n  men_unemployment_yearly,\n  black_men_unemployment_yearly,\n  hispanic_men_unemployment_yearly,\n  white_men_unemployment_yearly\n)\n\n\n\n\nCode\n# Create line plot\nggplot(combined_unemployment_men, aes(x = year, y = unemployment_rate, color = group)) +\n  geom_line(size = 1.2) +\n  geom_point(size = 2) +\n  theme_minimal() +\n  labs(title = \"Unemployment Rates by Demographic Group\",\n       x = \"Year\",\n       y = \"Unemployment Rate\",\n       color = \"Demographic Group\") +\n  scale_x_continuous(breaks = seq(2011, 2022, by = 1)) +\n  scale_color_manual(values = c(\"Men Overall\" = \"blue\", \"Black Men\" = \"red\", \"Hispanic Men\" = \"green\", \"White Men\" = \"purple\"))\n\n\n\n\n\n\n\n\n\nLets try a stacked bar chart\n\n\nCode\n# Create stacked bar chart\nggplot(combined_unemployment_men, aes(x = factor(year), y = unemployment_rate, fill = group)) +\n  geom_bar(stat = \"identity\") +\n  theme_minimal() +\n  labs(title = \"Unemployment Rates: Men x Race\",\n       x = \"Year\",\n       y = \"Unemployment Rate\",\n       fill = \"Demographic Group\") +\n  scale_fill_manual(values = c(\n    \"Men Overall\" = \"grey\",\n    \"Black Men\" = \"blue\",\n    \"Hispanic Men\" = \"orange\",\n    \"White Men\" = \"red\"\n  )) +\n  scale_x_discrete(breaks = seq(2011, 2022, by = 1))\n\n\n\n\n\n\n\n\n\nWhite women, 20 yrs. & older\n\n\nCode\nlibrary(dplyr)\n\nwhite_women_unemployment_data &lt;- fredr_series_observations(series_id = \"LNS14000029\")\n\n# Filter the data for the desired range\nwhite_women_unemployment_data_filtered &lt;- white_women_unemployment_data |&gt;\n  filter(date &gt;= as.Date(\"2011-01-01\") & date &lt; as.Date(\"2023-01-01\"))\n\nwhite_women_unemployment_yearly &lt;- white_women_unemployment_data_filtered |&gt;\n    mutate(year = lubridate::year(date)) |&gt;\n    group_by(year) |&gt;\n    summarize(average_unemployment = mean(value))\n\n# Create the table and style it\nkable(head(white_women_unemployment_yearly), format = \"html\") |&gt;\n  kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\", \"responsive\"),\n    full_width = FALSE\n  )\n\n\n\n\n\n\nyear\naverage_unemployment\n\n\n\n\n2011\n6.991667\n\n\n2012\n6.541667\n\n\n2013\n5.700000\n\n\n2014\n4.808333\n\n\n2015\n4.133333\n\n\n2016\n3.825000\n\n\n\n\n\n\n\n\nData shortcoming - this not available for Asian x Gender, but available for other races.\nLets do the same for women x race:\nCreating a combined dataset for women countrywide and each women x race dataset.\n\n\nCode\n# Add a 'group' column to each dataset\nwomen_unemployment_yearly &lt;- women_unemployment_yearly |&gt;\n  rename(unemployment_rate = average_unemployment) |&gt;\n  mutate(group = \"Women Overall\")\n\nblack_women_unemployment_yearly &lt;- black_women_unemployment_yearly |&gt;\n  rename(unemployment_rate = average_unemployment) |&gt;\n  mutate(group = \"Black Women\")\n\nhispanic_women_unemployment_yearly &lt;- hispanic_women_unemployment_yearly |&gt;\n  rename(unemployment_rate = average_unemployment) |&gt;\n  mutate(group = \"Hispanic Women\")\n\nwhite_women_unemployment_yearly &lt;- white_women_unemployment_yearly |&gt;\n  rename(unemployment_rate = average_unemployment) |&gt;\n  mutate(group = \"White Women\")\n\n# Combine all datasets into one\ncombined_unemployment_women &lt;- bind_rows(\n  women_unemployment_yearly,\n  black_women_unemployment_yearly,\n  hispanic_women_unemployment_yearly,\n  white_women_unemployment_yearly\n)\n\n\nStacked bar chart\n\n\nCode\n# Create stacked bar chart\nggplot(combined_unemployment_women, aes(x = factor(year), y = unemployment_rate, fill = group)) +\n  geom_bar(stat = \"identity\") +\n  theme_minimal() +\n  labs(title = \"Unemployment Rates: Women x Race\",\n       x = \"Year\",\n       y = \"Unemployment Rate\",\n       fill = \"Demographic Group\") +\n  scale_fill_manual(values = c(\n    \"Women Overall\" = \"grey\",\n    \"Black Women\" = \"blue\",\n    \"Hispanic Women\" = \"orange\",\n    \"White Women\" = \"red\"\n  )) +\n  scale_x_discrete(breaks = seq(2011, 2022, by = 1))"
  }
]