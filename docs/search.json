[
  {
    "objectID": "mp01.html",
    "href": "mp01.html",
    "title": "mp01",
    "section": "",
    "text": "Abstract:\n\n\n\n# ============================================================\n# Downloading, Cleaning, and Joining Tables\n# ============================================================\ninstall.packages(\"dplyr\", repos=c(CRAN = \"https://cran.rstudio\"))\nlibrary(dplyr)\n\n#First snippet of code, provided by professor\nif(!require(\"tidyverse\")) install.packages(\"tidyverse\")\n\n# Let's start with Fare Revenue\nlibrary(tidyverse)\nif(!file.exists(\"2022_fare_revenue.xlsx\")){\n  # This should work _in theory_ but in practice it's still a bit finicky\n  # If it doesn't work for you, download this file 'by hand' in your\n  # browser and save it as \"2022_fare_revenue.xlsx\" in your project\n  # directory.\n  download.file(\"http://www.transit.dot.gov/sites/fta.dot.gov/files/2024-04/2022%20Fare%20Revenue.xlsx\", \n                destfile=\"2022_fare_revenue.xlsx\", \n                quiet=FALSE, \n                method=\"wget\")\n}\nFARES &lt;- readxl::read_xlsx(\"2022_fare_revenue.xlsx\") |&gt;\n  select(-`State/Parent NTD ID`, \n         -`Reporter Type`,\n         -`Reporting Module`,\n         -`TOS`,\n         -`Passenger Paid Fares`,\n         -`Organization Paid Fares`) |&gt;\n  filter(`Expense Type` == \"Funds Earned During Period\") |&gt;\n  select(-`Expense Type`) |&gt;\n  group_by(`NTD ID`,       # Sum over different `TOS` for the same `Mode`\n           `Agency Name`,  # These are direct operated and sub-contracted \n           `Mode`) |&gt;      # of the same transit modality\n  # Not a big effect in most munis (significant DO\n  # tends to get rid of sub-contractors), but we'll sum\n  # to unify different passenger experiences\n  summarize(`Total Fares` = sum(`Total Fares`)) |&gt;\n  ungroup()\n\n# Next, expenses\nif(!file.exists(\"2022_expenses.csv\")){\n  # This should work _in theory_ but in practice it's still a bit finicky\n  # If it doesn't work for you, download this file 'by hand' in your\n  # browser and save it as \"2022_expenses.csv\" in your project\n  # directory.\n  download.file(\"https://data.transportation.gov/api/views/dkxx-zjd6/rows.csv?date=20231102&accessType=DOWNLOAD&bom=true&format=true\", \n                destfile=\"2022_expenses.csv\", \n                quiet=FALSE, \n                method=\"wget\")\n}\nEXPENSES &lt;- readr::read_csv(\"2022_expenses.csv\") |&gt;\n  select(`NTD ID`, \n         `Agency`,\n         `Total`, \n         `Mode`) |&gt;\n  mutate(`NTD ID` = as.integer(`NTD ID`)) |&gt;\n  rename(Expenses = Total) |&gt;\n  group_by(`NTD ID`, `Mode`) |&gt;\n  summarize(Expenses = sum(Expenses)) |&gt;\n  ungroup()\n\nFINANCIALS &lt;- inner_join(FARES, EXPENSES, join_by(`NTD ID`, `Mode`))\n\n#Checking financials data\nhead(FINANCIALS)\n\n# A tibble: 6 × 5\n  `NTD ID` `Agency Name`                           Mode  `Total Fares`  Expenses\n     &lt;dbl&gt; &lt;chr&gt;                                   &lt;chr&gt;         &lt;dbl&gt;     &lt;dbl&gt;\n1        1 King County Department of Metro Transit CB          5216912         0\n2        1 King County Department of Metro Transit DR           832327  60540676\n3        1 King County Department of Metro Transit FB          1715265   8899659\n4        1 King County Department of Metro Transit LR         29386480         0\n5        1 King County Department of Metro Transit MB         56846337 671653000\n6        1 King County Department of Metro Transit SR           588495  12511637\n\n#Noticed for some modes, there is an expense value of 0\n#Counting # of rows with 0 expenses\nzero_expenses_count &lt;- FINANCIALS |&gt;\n  filter(Expenses == 0) |&gt;\n  nrow()\nprint(zero_expenses_count) #There are 8 rows with zero expenses\n\n[1] 8\n\n#View rows with zero expenses and print\nzero_expenses_rows &lt;- FINANCIALS |&gt;\n  filter(Expenses == 0)\nprint(zero_expenses_rows)\n\n# A tibble: 8 × 5\n  `NTD ID` `Agency Name`                            Mode  `Total Fares` Expenses\n     &lt;dbl&gt; &lt;chr&gt;                                    &lt;chr&gt;         &lt;dbl&gt;    &lt;dbl&gt;\n1        1 King County Department of Metro Transit  CB          5216912        0\n2        1 King County Department of Metro Transit  LR         29386480        0\n3        3 Pierce County Transportation Benefit Ar… CB          4674368        0\n4        8 Tri-County Metropolitan Transportation … SR          1062102        0\n5    40178 The Transportation Management Associati… DR            34879        0\n6    40178 The Transportation Management Associati… MB            36874        0\n7    50008 Milwaukee County                         CB            21503        0\n8    60017 Central Oklahoma Transportation and Par… VP                0        0\n\n#Noting as a potential limitation for analysis later in the project. May choose to remove blank rows when calculating averages, etc.\n# ============================================================\n# Extracting monthly transit numbers\n# ============================================================\n#Second snippet of code, provided by professor \n# Monthly Transit Numbers\nlibrary(tidyverse)\nif(!file.exists(\"ridership.xlsx\")){\n  # This should work _in theory_ but in practice it's still a bit finicky\n  # If it doesn't work for you, download this file 'by hand' in your\n  # browser and save it as \"ridership.xlsx\" in your project\n  # directory.\n  download.file(\"https://www.transit.dot.gov/sites/fta.dot.gov/files/2024-09/July%202024%20Complete%20Monthly%20Ridership%20%28with%20adjustments%20and%20estimates%29_240903.xlsx\", \n                destfile=\"ridership.xlsx\", \n                quiet=FALSE, \n                method=\"wget\")\n}\nTRIPS &lt;- readxl::read_xlsx(\"ridership.xlsx\", sheet=\"UPT\") |&gt;\n  filter(`Mode/Type of Service Status` == \"Active\") |&gt;\n  select(-`Legacy NTD ID`, \n         -`Reporter Type`, \n         -`Mode/Type of Service Status`, \n         -`UACE CD`, \n         -`TOS`) |&gt;\n  pivot_longer(-c(`NTD ID`:`3 Mode`), \n               names_to=\"month\", \n               values_to=\"UPT\") |&gt;\n  drop_na() |&gt;\n  mutate(month=my(month)) # Parse _m_onth _y_ear date specs\nMILES &lt;- readxl::read_xlsx(\"ridership.xlsx\", sheet=\"VRM\") |&gt;\n  filter(`Mode/Type of Service Status` == \"Active\") |&gt;\n  select(-`Legacy NTD ID`, \n         -`Reporter Type`, \n         -`Mode/Type of Service Status`, \n         -`UACE CD`, \n         -`TOS`) |&gt;\n  pivot_longer(-c(`NTD ID`:`3 Mode`), \n               names_to=\"month\", \n               values_to=\"VRM\") |&gt;\n  drop_na() |&gt;\n  group_by(`NTD ID`, `Agency`, `UZA Name`, \n           `Mode`, `3 Mode`, month) |&gt;\n  summarize(VRM = sum(VRM)) |&gt;\n  ungroup() |&gt;\n  mutate(month=my(month)) # Parse _m_onth _y_ear date specs\n\nUSAGE &lt;- inner_join(TRIPS, MILES) |&gt;\n  mutate(`NTD ID` = as.integer(`NTD ID`))\n\n# ============================================================\n# Creating a table\n# ============================================================\n#Third snippet of code, provided by professor\nif(!require(\"DT\")) install.packages(\"DT\")\nlibrary(DT)\n\nsample_n(USAGE, 1000) |&gt; \n  mutate(month=as.character(month)) |&gt; \n  DT::datatable()\n\n\n\n\n\n\n\n\n\n# ============================================================\n# Task 1 - Creating Syntatic Names \n# ============================================================\n#renaming UZA Name to metro_area\nUSAGE &lt;- USAGE |&gt;\n  rename(metro_area = 'UZA Name')\n\nTRIPS &lt;- TRIPS |&gt;\n  rename(metro_area = 'UZA Name')\n\nMILES &lt;- MILES |&gt;\n  rename(metro_area = 'UZA Name')\n\nnames(USAGE)\n\n[1] \"NTD ID\"     \"Agency\"     \"metro_area\" \"Mode\"       \"3 Mode\"    \n[6] \"month\"      \"UPT\"        \"VRM\"       \n\nnames(TRIPS)\n\n[1] \"NTD ID\"     \"Agency\"     \"metro_area\" \"Mode\"       \"3 Mode\"    \n[6] \"month\"      \"UPT\"       \n\nnames(MILES)\n\n[1] \"NTD ID\"     \"Agency\"     \"metro_area\" \"Mode\"       \"3 Mode\"    \n[6] \"month\"      \"VRM\"       \n\n\n\n\n\n\n# ============================================================\n# Task 2 - Recoding the Mode column\n# ============================================================\n#using case_when to recode the mode column \nUSAGE &lt;- USAGE |&gt;\n  mutate(Mode = case_when(\n    Mode == \"HR\" ~ \"Heavy Rail\",\n    Mode == \"LR\" ~ \"Light Rail\",\n    Mode == \"YR\" ~ \"Hybrid Rail\",\n    Mode == \"MB\" ~ \"Bus\",\n    Mode == \"DR\" ~ \"Demand Response\",\n    Mode == \"CB\" ~ \"Commuter Bus\",\n    Mode == \"FB\" ~ \"Ferry Boat\",\n    Mode == \"SR\" ~ \"Streetcar\", \n    Mode == \"TB\" ~ \"Trolleybus\",\n    Mode == \"VP\" ~ \"Vanpool\",\n    Mode == \"RB\" ~ \"Rapid Bus\",\n    Mode == \"MG\" ~ \"Monorail\",\n    Mode == \"CR\" ~ \"Commuter Rail\",\n    Mode == \"AR\" ~ \"Alaska Railroad\",\n    Mode == \"TR\" ~ \"Aerial Tramway\",\n    Mode == \"IP\" ~ \"Inclined Plane\",\n    Mode == \"PB\" ~ \"Publico\",\n    Mode == \"CC\" ~ \"Cable Car\",\n    TRUE ~ \"Unknown\"))  # Default for any unrecognized codes\n  \n#checking result of task 2\nhead(USAGE)\n\n# A tibble: 6 × 8\n  `NTD ID` Agency      metro_area        Mode  `3 Mode` month         UPT    VRM\n     &lt;int&gt; &lt;chr&gt;       &lt;chr&gt;             &lt;chr&gt; &lt;chr&gt;    &lt;date&gt;      &lt;dbl&gt;  &lt;dbl&gt;\n1        1 King County Seattle--Tacoma,… Dema… Bus      2002-01-01 135144 746158\n2        1 King County Seattle--Tacoma,… Dema… Bus      2002-02-01 127378 656324\n3        1 King County Seattle--Tacoma,… Dema… Bus      2002-03-01 136030 726578\n4        1 King County Seattle--Tacoma,… Dema… Bus      2002-04-01 142204 736975\n5        1 King County Seattle--Tacoma,… Dema… Bus      2002-05-01 144697 746158\n6        1 King County Seattle--Tacoma,… Dema… Bus      2002-06-01 131833 696633\n\nUSAGE |&gt;\n  distinct(Mode)\n\n# A tibble: 18 × 1\n   Mode           \n   &lt;chr&gt;          \n 1 Demand Response\n 2 Ferry Boat     \n 3 Bus            \n 4 Streetcar      \n 5 Trolleybus     \n 6 Vanpool        \n 7 Commuter Bus   \n 8 Rapid Bus      \n 9 Light Rail     \n10 Hybrid Rail    \n11 Monorail       \n12 Commuter Rail  \n13 Alaska Railroad\n14 Aerial Tramway \n15 Heavy Rail     \n16 Inclined Plane \n17 Publico        \n18 Cable Car      \n\n#creating an attractive summary table of cleaned up USAGE table \nif(!require(\"DT\")) install.packages(\"DT\")\nlibrary(DT)\n\nsample_n(USAGE, 1000) |&gt; \n  mutate(month=as.character(month)) |&gt; \n  DT::datatable()\n\n\n\n\n\n\n\n\n\n\n\n# 1. What transit agency had the most total VRM in our data set?\n#grouping by agency, summing VRM by agency & removing any NA values, arranging in descending order\ntotal_VRM_by_agency &lt;- USAGE |&gt;\n  group_by(Agency) |&gt;\n  summarize(Total_VRM = sum(VRM, na.rm =TRUE)) |&gt;\n  arrange(desc(Total_VRM))\n#displaying summed VRM by agency table\nprint(total_VRM_by_agency)\n\n# A tibble: 677 × 2\n   Agency                                                              Total_VRM\n   &lt;chr&gt;                                                                   &lt;dbl&gt;\n 1 MTA New York City Transit                                             1.08e10\n 2 New Jersey Transit Corporation                                        5.65e 9\n 3 Los Angeles County Metropolitan Transportation Authority              4.35e 9\n 4 Washington Metropolitan Area Transit Authority                        2.82e 9\n 5 Chicago Transit Authority                                             2.81e 9\n 6 Southeastern Pennsylvania Transportation Authority                    2.67e 9\n 7 Massachusetts Bay Transportation Authority                            2.38e 9\n 8 Pace, the Suburban Bus Division of the Regional Transportation Aut…   2.38e 9\n 9 Metropolitan Transit Authority of Harris County, Texas                2.27e 9\n10 Denver Regional Transportation District                               1.99e 9\n# ℹ 667 more rows\n\n#displaying agency with highest total VRM\nhighest_VRM_agency &lt;- total_VRM_by_agency |&gt;\n  filter(Total_VRM == max(Total_VRM))\n#printing highest_VRM_agency\nprint(highest_VRM_agency)\n\n# A tibble: 1 × 2\n  Agency                      Total_VRM\n  &lt;chr&gt;                           &lt;dbl&gt;\n1 MTA New York City Transit 10832855350\n\n\n\n\n\n\n# 2. What transit mode had the most total VRM in our data set?\n#grouping by mode, summing VRM by mode & removing any NA values, arranging in descending order\ntotal_VRM_by_mode &lt;- USAGE |&gt;\n  group_by(Mode) |&gt;\n  summarize(Total_VRM = sum(VRM, na.rm =TRUE)) |&gt;\n  arrange(desc(Total_VRM))\n#displaying summed VRM by mode table\nprint(total_VRM_by_mode)\n\n# A tibble: 18 × 2\n   Mode              Total_VRM\n   &lt;chr&gt;                 &lt;dbl&gt;\n 1 Bus             49444494088\n 2 Demand Response 17955073508\n 3 Heavy Rail      14620362107\n 4 Commuter Rail    6970644241\n 5 Vanpool          3015783362\n 6 Light Rail       2090094714\n 7 Commuter Bus     1380948975\n 8 Publico          1021270808\n 9 Trolleybus        236840288\n10 Rapid Bus         118425283\n11 Ferry Boat         65589783\n12 Streetcar          63389725\n13 Monorail           37879729\n14 Hybrid Rail        37787608\n15 Alaska Railroad    13833261\n16 Cable Car           7386019\n17 Inclined Plane       705904\n18 Aerial Tramway       292860\n\n#displaying mode with highest total VRM\nhighest_VRM_mode &lt;- total_VRM_by_mode |&gt;\n  filter(Total_VRM == max(Total_VRM))\n#printing highest_VRM_mode\nprint(highest_VRM_mode)\n\n# A tibble: 1 × 2\n  Mode    Total_VRM\n  &lt;chr&gt;       &lt;dbl&gt;\n1 Bus   49444494088\n\n\n\n\n\n\n# 3. How many trips were taken on the NYC Subway (Heavy Rail) in May 2024?\n#first filtering the condensed_usage data frame to only heavy rail to see what else needs to be filtered out\nheavy_rail_data &lt;- USAGE |&gt;\n  filter(Mode == \"Heavy Rail\")\n#viewing first 10 rows of filtered data\nhead(heavy_rail_data)\n\n# A tibble: 6 × 8\n  `NTD ID` Agency             metro_area Mode  `3 Mode` month         UPT    VRM\n     &lt;int&gt; &lt;chr&gt;              &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt;    &lt;date&gt;      &lt;dbl&gt;  &lt;dbl&gt;\n1    10003 Massachusetts Bay… Boston, M… Heav… Rail     2002-01-01 9.95e6 1.65e6\n2    10003 Massachusetts Bay… Boston, M… Heav… Rail     2002-02-01 9.75e6 1.50e6\n3    10003 Massachusetts Bay… Boston, M… Heav… Rail     2002-03-01 1.05e7 1.65e6\n4    10003 Massachusetts Bay… Boston, M… Heav… Rail     2002-04-01 1.07e7 1.64e6\n5    10003 Massachusetts Bay… Boston, M… Heav… Rail     2002-05-01 1.05e7 1.67e6\n6    10003 Massachusetts Bay… Boston, M… Heav… Rail     2002-06-01 1.04e7 1.59e6\n\n#displaying unique values of metro_area\nunique_metro_areas &lt;- USAGE |&gt;\n  distinct(metro_area)\nprint(unique_metro_areas)\n\n# A tibble: 376 × 1\n   metro_area                    \n   &lt;chr&gt;                         \n 1 Seattle--Tacoma, WA           \n 2 Spokane, WA                   \n 3 Yakima, WA                    \n 4 Eugene, OR                    \n 5 Portland, OR--WA              \n 6 Boise City, ID                \n 7 Anchorage, AK                 \n 8 Longview, WA--OR              \n 9 Kennewick--Richland--Pasco, WA\n10 Olympia--Lacey, WA            \n# ℹ 366 more rows\n\nnyc_subway_trips_count &lt;- USAGE |&gt;\n  filter(Mode == \"Heavy Rail\",\n         month == \"2024-05-01\",\n         Agency == \"MTA New York City Transit\") |&gt;\n  summarize(Total_Trips = sum(UPT, na.rm = TRUE))\n\n# Print the total trips taken on the NYC Subway in May 2024\nprint(nyc_subway_trips_count)\n\n# A tibble: 1 × 1\n  Total_Trips\n        &lt;dbl&gt;\n1   180458819\n\n\n\n\n\n\n# 5. How much did NYC subway ridership fall between April 2019 and April 2020?\n#finding ridership for April 2019 first\nnyc_subway_trips_april_2019 &lt;- USAGE |&gt;\n  filter(Mode == \"Heavy Rail\",\n         month == \"2019-04-01\",\n         Agency == \"MTA New York City Transit\") |&gt;\n  summarize(Total_Trips = sum(UPT, na.rm = TRUE))\n\n# Print the total trips taken on the NYC Subway in April 2019\nprint(nyc_subway_trips_april_2019)\n\n# A tibble: 1 × 1\n  Total_Trips\n        &lt;dbl&gt;\n1   232223929\n\n#ridership for april 2020 second \nnyc_subway_trips_april_2020 &lt;- USAGE |&gt;\n  filter(Mode == \"Heavy Rail\",\n         month == \"2020-04-01\",\n         Agency == \"MTA New York City Transit\") |&gt;\n  summarize(Total_Trips = sum(UPT, na.rm = TRUE))\n\n# Print the total trips taken on the NYC Subway in April 2020\nprint(nyc_subway_trips_april_2020)\n\n# A tibble: 1 × 1\n  Total_Trips\n        &lt;dbl&gt;\n1    20254269\n\n#calculating the difference \nnyc_ridership_change &lt;- abs(nyc_subway_trips_april_2020 - nyc_subway_trips_april_2019)\nprint(nyc_ridership_change)\n\n  Total_Trips\n1   211969660\n\n#Statement defining ridership change. Using paste() function to allow for string + variable to print together\nprint(paste(\"NYC Ridership fell by \", nyc_ridership_change, \" riders from April 2019 to April 2020.\"))\n\n[1] \"NYC Ridership fell by  211969660  riders from April 2019 to April 2020.\"\n\n\n\n\n\n\n\n# ============================================================\n# Task 4 - Explore and Analyze\n# ============================================================\n\n# Three more interesting transit facts \n# Additional fact 1a - ridership for each mode by MTA NYC Transit \nmta_ridership_by_mode &lt;- USAGE |&gt;\n  filter(Agency == \"MTA New York City Transit\") |&gt;\n  group_by(Mode) |&gt;\n  summarize(Total_Ridership = sum(UPT, na.rm = TRUE)) |&gt;\n  arrange(desc(Total_Ridership))\n\nprint(mta_ridership_by_mode) #table outlining different modes of transportation and their total rides \n\n# A tibble: 5 × 2\n  Mode            Total_Ridership\n  &lt;chr&gt;                     &lt;dbl&gt;\n1 Heavy Rail          51672094135\n2 Bus                 16889723939\n3 Rapid Bus             315432467\n4 Commuter Bus          133304773\n5 Demand Response        91175466\n\n\n\n# Additional fact 1b - listing most popular nyc mode and its ridership\nnyc_most_popular_mode &lt;- mta_ridership_by_mode |&gt;\n  filter(Total_Ridership == max(Total_Ridership))\n\nprint(nyc_most_popular_mode) #heavy rail aka subway is most popular nyc mode of transportation\n\n# A tibble: 1 × 2\n  Mode       Total_Ridership\n  &lt;chr&gt;                &lt;dbl&gt;\n1 Heavy Rail     51672094135\n\n\n\n# Additional fact 2 - Comparing NYC ridership pre and post pandemic \n#pre-pandemic \npre_pandemic_ridership &lt;- USAGE |&gt;\n  filter(Agency == \"MTA New York City Transit\",\n         month &gt;= \"2019-01-01\",\n         month &lt;= \"2019-12-31\") |&gt;\n  summarize(avg_ridership = mean(UPT, na.rm = TRUE))\n\nprint(pre_pandemic_ridership)\n\n# A tibble: 1 × 1\n  avg_ridership\n          &lt;dbl&gt;\n1     57709634.\n\n#post-pandemic \npost_pandemic_ridership &lt;- USAGE |&gt;\n  filter(Agency == \"MTA New York City Transit\",\n         month &gt;= \"2022-01-01\",\n         month &lt;= \"2022-12-31\") |&gt;\n  summarize(avg_ridership = mean(UPT, na.rm = TRUE))\n\nprint(post_pandemic_ridership)\n\n# A tibble: 1 × 1\n  avg_ridership\n          &lt;dbl&gt;\n1     37980885.\n\nprint(paste(\"The average ridership for the year of 2019, pre-pandemic, was \", round(pre_pandemic_ridership,0), \" and the average ridership for the year of 2022, post pandemic, was \", round(post_pandemic_ridership,0)))\n\n[1] \"The average ridership for the year of 2019, pre-pandemic, was  57709634  and the average ridership for the year of 2022, post pandemic, was  37980885\"\n\n\n\n# Additional fact 3\n#MTA NYC Transit ridership efficiency by mode \n#where efficiency represents the avg # of unlinked passenger trips per vehicle revenue mile\nridership_efficiency &lt;- USAGE |&gt;\n  filter(Agency == \"MTA New York City Transit\") |&gt;\n  group_by(Mode) |&gt;\n  summarize(Efficiency = sum(UPT, na.rm = TRUE) / sum(VRM, na.rm = TRUE))\nprint(ridership_efficiency) #efficiency = for every mile traveled, x# of passengers carried \n\n# A tibble: 5 × 2\n  Mode            Efficiency\n  &lt;chr&gt;                &lt;dbl&gt;\n1 Bus                  8.05 \n2 Commuter Bus         1.15 \n3 Demand Response      0.107\n4 Heavy Rail           6.68 \n5 Rapid Bus            9.17 \n\n\n\n\n\n\n# ============================================================\n# Task 5 - Table Summarization\n# ============================================================\n#creating a new table from USAGE that has annual total (sum) UPT and VRM for 2022\nnames(USAGE)\n\n[1] \"NTD ID\"     \"Agency\"     \"metro_area\" \"Mode\"       \"3 Mode\"    \n[6] \"month\"      \"UPT\"        \"VRM\"       \n\nUSAGE_2022_ANNUAL &lt;- USAGE |&gt;\n  filter(year(month) == 2022) |&gt;\n  group_by(`NTD ID`, Agency, metro_area, Mode) |&gt;\n  summarize(\n    UPT = sum(UPT, na.rm=TRUE),\n    VRM = sum(VRM, na.rm=TRUE)\n  ) |&gt;\n  ungroup()\n\n`summarise()` has grouped output by 'NTD ID', 'Agency', 'metro_area'. You can\noverride using the `.groups` argument.\n\nFINANCIALS &lt;- FINANCIALS |&gt;\n  mutate(Mode = case_when(\n    Mode == \"HR\" ~ \"Heavy Rail\",\n    Mode == \"LR\" ~ \"Light Rail\",\n    Mode == \"YR\" ~ \"Hybrid Rail\",\n    Mode == \"MB\" ~ \"Bus\",\n    Mode == \"DR\" ~ \"Demand Response\",\n    Mode == \"CB\" ~ \"Commuter Bus\",\n    Mode == \"FB\" ~ \"Ferry Boat\",\n    Mode == \"SR\" ~ \"Streetcar\", \n    Mode == \"TB\" ~ \"Trolleybus\",\n    Mode == \"VP\" ~ \"Vanpool\",\n    Mode == \"RB\" ~ \"Rapid Bus\",\n    Mode == \"MG\" ~ \"Monorail\",\n    Mode == \"CR\" ~ \"Commuter Rail\",\n    Mode == \"AR\" ~ \"Alaska Railroad\",\n    Mode == \"TR\" ~ \"Aerial Tramway\",\n    Mode == \"IP\" ~ \"Inclined Plane\",\n    Mode == \"PB\" ~ \"Publico\",\n    Mode == \"CC\" ~ \"Cable Car\",\n    TRUE ~ \"Unknown\"))  # Default for any unrecognized codes\n\n\n#Merging USAGE_2022_ANNUAL table to the FINANCIALS table \nUSAGE_AND_FINANCIALS &lt;- left_join(USAGE_2022_ANNUAL, \n                                  FINANCIALS, \n                                  join_by(`NTD ID`, Mode)) |&gt;\n  drop_na()\n#Viewing first few rows of merged table \nhead(USAGE_AND_FINANCIALS)\n\n# A tibble: 6 × 9\n  `NTD ID` Agency     metro_area Mode     UPT    VRM `Agency Name` `Total Fares`\n     &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;                 &lt;dbl&gt;\n1        1 King Coun… Seattle--… Bus   5.40e7 6.16e7 King County …      56846337\n2        1 King Coun… Seattle--… Dema… 6.63e5 1.29e7 King County …        832327\n3        1 King Coun… Seattle--… Ferr… 4.00e5 5.12e4 King County …       1715265\n4        1 King Coun… Seattle--… Stre… 1.12e6 1.80e5 King County …        588495\n5        1 King Coun… Seattle--… Trol… 9.58e6 2.64e6 King County …      10123486\n6        1 King Coun… Seattle--… Vanp… 7.03e5 4.41e6 King County …       5484481\n# ℹ 1 more variable: Expenses &lt;dbl&gt;\n\n\n\n\n\n\n\n\n# 1. Which transit system (agency and mode) had the most UPT in 2022?\n#table summarizing the total UPT for each agency and mode \nUPT_summary_agency_mode &lt;- USAGE_AND_FINANCIALS |&gt; \n  group_by(Agency, Mode) |&gt;\n  summarize(Total_UPT = sum(UPT, na.rm = TRUE)) |&gt;\n  arrange(desc(Total_UPT)) \n\n`summarise()` has grouped output by 'Agency'. You can override using the\n`.groups` argument.\n\n#printing summary table \nprint(UPT_summary_agency_mode)\n\n# A tibble: 1,129 × 3\n# Groups:   Agency [525]\n   Agency                                                   Mode       Total_UPT\n   &lt;chr&gt;                                                    &lt;chr&gt;          &lt;dbl&gt;\n 1 MTA New York City Transit                                Heavy Rail    1.79e9\n 2 MTA New York City Transit                                Bus           4.59e8\n 3 Los Angeles County Metropolitan Transportation Authority Bus           1.94e8\n 4 Chicago Transit Authority                                Bus           1.40e8\n 5 New Jersey Transit Corporation                           Bus           1.13e8\n 6 Chicago Transit Authority                                Heavy Rail    1.04e8\n 7 MTA Bus Company                                          Bus           1.00e8\n 8 Washington Metropolitan Area Transit Authority           Heavy Rail    9.84e7\n 9 Southeastern Pennsylvania Transportation Authority       Bus           9.66e7\n10 Washington Metropolitan Area Transit Authority           Bus           8.99e7\n# ℹ 1,119 more rows\n\n#max UPT from table \nmax_UPT &lt;- UPT_summary_agency_mode |&gt; \n  filter(Total_UPT == max(Total_UPT))\nmax_UPT_system &lt;- head(max_UPT,1)\nprint(max_UPT_system)\n\n# A tibble: 1 × 3\n# Groups:   Agency [1]\n  Agency                    Mode        Total_UPT\n  &lt;chr&gt;                     &lt;chr&gt;           &lt;dbl&gt;\n1 MTA New York City Transit Heavy Rail 1793073801\n\nmost_UPT_agency &lt;- max_UPT_system$Agency #grabs the value from the column after the $ sign\nprint(most_UPT_agency)\n\n[1] \"MTA New York City Transit\"\n\nmost_UPT_mode &lt;- max_UPT_system$Mode\nprint(most_UPT_mode)\n\n[1] \"Heavy Rail\"\n\nprint(paste(\"The Agency with the highest UPT is \", most_UPT_agency, \" with a mode of \", most_UPT_mode))\n\n[1] \"The Agency with the highest UPT is  MTA New York City Transit  with a mode of  Heavy Rail\"\n\n\n\n\n\n\n# 2. Which transit system (agency and mode) had the highest farebox recovery, defined as the highest ratio of Total Fares to Expenses?\nhighest_farebox_recovery &lt;- USAGE_AND_FINANCIALS |&gt;\n  mutate(Farebox_Recovery = `Total Fares` / Expenses) |&gt;\n  filter(Farebox_Recovery == max(Farebox_Recovery, na.rm = TRUE)) |&gt;\n  arrange(desc(Farebox_Recovery)) |&gt;\n  head(1) #returns top row\nprint(highest_farebox_recovery)\n\n# A tibble: 1 × 10\n  `NTD ID` Agency       metro_area Mode    UPT   VRM `Agency Name` `Total Fares`\n     &lt;dbl&gt; &lt;chr&gt;        &lt;chr&gt;      &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;                 &lt;dbl&gt;\n1    40191 Transit Aut… Elizabeth… Vanp…  9640 94027 Transit Auth…         97300\n# ℹ 2 more variables: Expenses &lt;dbl&gt;, Farebox_Recovery &lt;dbl&gt;\n\nmost_farebox_agency &lt;- highest_farebox_recovery$Agency\nmost_farebox_mode &lt;- highest_farebox_recovery$Mode\ntop_recovery &lt;- highest_farebox_recovery$Farebox_Recovery\n\nprint(paste(\"The Agency with the highest Farebox Recovery is\", most_farebox_agency, \"and its mode is\", most_farebox_mode, \"with a farebox recovery ratio of\", round(top_recovery,2)))\n\n[1] \"The Agency with the highest Farebox Recovery is Transit Authority of Central Kentucky and its mode is Vanpool with a farebox recovery ratio of 2.38\"\n\n\n\n\n\n\n# 3. Which transit system (agency and mode) has the lowest expenses per UPT?\nlowest_expenses_per_UPT &lt;- USAGE_AND_FINANCIALS |&gt;\n  mutate(Expenses_per_UPT = Expenses /UPT) |&gt;\n  arrange(Expenses_per_UPT) |&gt; #arranges in ascending order \n  filter(Expenses_per_UPT == min(Expenses_per_UPT, na.rm = TRUE)) |&gt;\n  head(1) #selects top row, which will be lowest, since in ascending order\n\nlowest_exp_agency &lt;- lowest_expenses_per_UPT$Agency\nlowest_exp_mode &lt;- lowest_expenses_per_UPT$Mode\nlowest_exp_per_UPT &lt;- lowest_expenses_per_UPT$Expenses_per_UPT\n\nprint(paste(\"The transit system with the lowest expenses per UPT is\", lowest_exp_agency, \"and its mode is\", lowest_exp_mode, \"with an expenses per UPT ratio of\", round(lowest_exp_per_UPT,2)))\n\n[1] \"The transit system with the lowest expenses per UPT is North Carolina State University and its mode is Bus with an expenses per UPT ratio of 1.18\"\n\n\n\n\n\n\n# 4. Which transit system (agency and mode) has the highest total fares per UPT?\nhighest_fares_per_UPT &lt;- USAGE_AND_FINANCIALS |&gt;\n  mutate(Fares_per_UPT = `Total Fares` / UPT) |&gt;\n  arrange(desc(Fares_per_UPT)) |&gt;\n  head(1)\n\nhighest_fares_agency &lt;- highest_fares_per_UPT$Agency\nhighest_fares_mode &lt;- highest_fares_per_UPT$Mode\nhighest_fares_per_UPT_amt &lt;- highest_fares_per_UPT$Fares_per_UPT\n\nprint(paste(\"The transit system with the highest total fares per UPT is\", highest_fares_agency,\"and its mode is\", highest_fares_mode, \"with a fares per UPT ratio of\", round(highest_fares_per_UPT_amt,2)))\n\n[1] \"The transit system with the highest total fares per UPT is Altoona Metro Transit and its mode is Demand Response with a fares per UPT ratio of 660.12\"\n\n\n\n\n\n\n# 5. Which transit system (agency and mode) has the lowest expenses per VRM?\n#very similar to code for #3 \nlowest_expenses_per_VRM &lt;- USAGE_AND_FINANCIALS |&gt;\n  mutate(Expenses_per_VRM = Expenses / VRM) |&gt;\n  arrange(Expenses_per_VRM) |&gt;\n  head(1)\n\nlowest_exp_VRM_agency &lt;- lowest_expenses_per_VRM$Agency\nlowest_exp_VRM_mode &lt;- lowest_expenses_per_VRM$Mode\nlowest_exp_per_VRM_amt &lt;- lowest_expenses_per_VRM$Expenses_per_VRM\n\nprint(paste(\"The transit system with the lowest expenses per VRM is\", lowest_exp_VRM_agency, \"and its mode is\", lowest_exp_VRM_mode, \"with an expenses per VRM ratio of\", round(lowest_exp_per_VRM_amt,2)))\n\n[1] \"The transit system with the lowest expenses per VRM is New Mexico Department of Transportation and its mode is Vanpool with an expenses per VRM ratio of 0.34\"\n\n\n\n\n\n\n# 6. Which transit system (agency and mode) has the highest total fares per VRM?\n# very similar to code for #4\nhighest_fares_per_VRM &lt;- USAGE_AND_FINANCIALS |&gt;\n  mutate(Fares_per_VRM = `Total Fares` / VRM) |&gt;\n  arrange(desc(Fares_per_VRM)) |&gt;\n  head(1)\n\nhighest_fares_agency &lt;- highest_fares_per_VRM$Agency\nhighest_fares_mode &lt;- highest_fares_per_VRM$Mode\nhighest_fares_per_VRM_amt &lt;- highest_fares_per_VRM$Fares_per_VRM\n\nprint(paste(\"The transit system with the highest total fares per VRM is\", highest_fares_agency,\"and its mode is\", highest_fares_mode, \"with a fares per VRM ratio of\", round(highest_fares_per_VRM_amt,2)))\n\n[1] \"The transit system with the highest total fares per VRM is Chicago Water Taxi (Wendella) and its mode is Ferry Boat with a fares per VRM ratio of 237.46\""
  },
  {
    "objectID": "mp01.html#task-1",
    "href": "mp01.html#task-1",
    "title": "mp01",
    "section": "",
    "text": "# ============================================================\n# Task 1 - Creating Syntatic Names \n# ============================================================\n#renaming UZA Name to metro_area\nUSAGE &lt;- USAGE |&gt;\n  rename(metro_area = 'UZA Name')\n\nTRIPS &lt;- TRIPS |&gt;\n  rename(metro_area = 'UZA Name')\n\nMILES &lt;- MILES |&gt;\n  rename(metro_area = 'UZA Name')\n\nnames(USAGE)\n\n[1] \"NTD ID\"     \"Agency\"     \"metro_area\" \"Mode\"       \"3 Mode\"    \n[6] \"month\"      \"UPT\"        \"VRM\"       \n\nnames(TRIPS)\n\n[1] \"NTD ID\"     \"Agency\"     \"metro_area\" \"Mode\"       \"3 Mode\"    \n[6] \"month\"      \"UPT\"       \n\nnames(MILES)\n\n[1] \"NTD ID\"     \"Agency\"     \"metro_area\" \"Mode\"       \"3 Mode\"    \n[6] \"month\"      \"VRM\""
  },
  {
    "objectID": "mp01.html#task-2",
    "href": "mp01.html#task-2",
    "title": "mp01",
    "section": "",
    "text": "# ============================================================\n# Task 2 - Recoding the Mode column\n# ============================================================\n#using case_when to recode the mode column \nUSAGE &lt;- USAGE |&gt;\n  mutate(Mode = case_when(\n    Mode == \"HR\" ~ \"Heavy Rail\",\n    Mode == \"LR\" ~ \"Light Rail\",\n    Mode == \"YR\" ~ \"Hybrid Rail\",\n    Mode == \"MB\" ~ \"Bus\",\n    Mode == \"DR\" ~ \"Demand Response\",\n    Mode == \"CB\" ~ \"Commuter Bus\",\n    Mode == \"FB\" ~ \"Ferry Boat\",\n    Mode == \"SR\" ~ \"Streetcar\", \n    Mode == \"TB\" ~ \"Trolleybus\",\n    Mode == \"VP\" ~ \"Vanpool\",\n    Mode == \"RB\" ~ \"Rapid Bus\",\n    Mode == \"MG\" ~ \"Monorail\",\n    Mode == \"CR\" ~ \"Commuter Rail\",\n    Mode == \"AR\" ~ \"Alaska Railroad\",\n    Mode == \"TR\" ~ \"Aerial Tramway\",\n    Mode == \"IP\" ~ \"Inclined Plane\",\n    Mode == \"PB\" ~ \"Publico\",\n    Mode == \"CC\" ~ \"Cable Car\",\n    TRUE ~ \"Unknown\"))  # Default for any unrecognized codes\n  \n#checking result of task 2\nhead(USAGE)\n\n# A tibble: 6 × 8\n  `NTD ID` Agency      metro_area        Mode  `3 Mode` month         UPT    VRM\n     &lt;int&gt; &lt;chr&gt;       &lt;chr&gt;             &lt;chr&gt; &lt;chr&gt;    &lt;date&gt;      &lt;dbl&gt;  &lt;dbl&gt;\n1        1 King County Seattle--Tacoma,… Dema… Bus      2002-01-01 135144 746158\n2        1 King County Seattle--Tacoma,… Dema… Bus      2002-02-01 127378 656324\n3        1 King County Seattle--Tacoma,… Dema… Bus      2002-03-01 136030 726578\n4        1 King County Seattle--Tacoma,… Dema… Bus      2002-04-01 142204 736975\n5        1 King County Seattle--Tacoma,… Dema… Bus      2002-05-01 144697 746158\n6        1 King County Seattle--Tacoma,… Dema… Bus      2002-06-01 131833 696633\n\nUSAGE |&gt;\n  distinct(Mode)\n\n# A tibble: 18 × 1\n   Mode           \n   &lt;chr&gt;          \n 1 Demand Response\n 2 Ferry Boat     \n 3 Bus            \n 4 Streetcar      \n 5 Trolleybus     \n 6 Vanpool        \n 7 Commuter Bus   \n 8 Rapid Bus      \n 9 Light Rail     \n10 Hybrid Rail    \n11 Monorail       \n12 Commuter Rail  \n13 Alaska Railroad\n14 Aerial Tramway \n15 Heavy Rail     \n16 Inclined Plane \n17 Publico        \n18 Cable Car      \n\n#creating an attractive summary table of cleaned up USAGE table \nif(!require(\"DT\")) install.packages(\"DT\")\nlibrary(DT)\n\nsample_n(USAGE, 1000) |&gt; \n  mutate(month=as.character(month)) |&gt; \n  DT::datatable()"
  },
  {
    "objectID": "mp01.html#task-3",
    "href": "mp01.html#task-3",
    "title": "mp01",
    "section": "",
    "text": "# 1. What transit agency had the most total VRM in our data set?\n#grouping by agency, summing VRM by agency & removing any NA values, arranging in descending order\ntotal_VRM_by_agency &lt;- USAGE |&gt;\n  group_by(Agency) |&gt;\n  summarize(Total_VRM = sum(VRM, na.rm =TRUE)) |&gt;\n  arrange(desc(Total_VRM))\n#displaying summed VRM by agency table\nprint(total_VRM_by_agency)\n\n# A tibble: 677 × 2\n   Agency                                                              Total_VRM\n   &lt;chr&gt;                                                                   &lt;dbl&gt;\n 1 MTA New York City Transit                                             1.08e10\n 2 New Jersey Transit Corporation                                        5.65e 9\n 3 Los Angeles County Metropolitan Transportation Authority              4.35e 9\n 4 Washington Metropolitan Area Transit Authority                        2.82e 9\n 5 Chicago Transit Authority                                             2.81e 9\n 6 Southeastern Pennsylvania Transportation Authority                    2.67e 9\n 7 Massachusetts Bay Transportation Authority                            2.38e 9\n 8 Pace, the Suburban Bus Division of the Regional Transportation Aut…   2.38e 9\n 9 Metropolitan Transit Authority of Harris County, Texas                2.27e 9\n10 Denver Regional Transportation District                               1.99e 9\n# ℹ 667 more rows\n\n#displaying agency with highest total VRM\nhighest_VRM_agency &lt;- total_VRM_by_agency |&gt;\n  filter(Total_VRM == max(Total_VRM))\n#printing highest_VRM_agency\nprint(highest_VRM_agency)\n\n# A tibble: 1 × 2\n  Agency                      Total_VRM\n  &lt;chr&gt;                           &lt;dbl&gt;\n1 MTA New York City Transit 10832855350\n\n\n\n\n\n\n# 2. What transit mode had the most total VRM in our data set?\n#grouping by mode, summing VRM by mode & removing any NA values, arranging in descending order\ntotal_VRM_by_mode &lt;- USAGE |&gt;\n  group_by(Mode) |&gt;\n  summarize(Total_VRM = sum(VRM, na.rm =TRUE)) |&gt;\n  arrange(desc(Total_VRM))\n#displaying summed VRM by mode table\nprint(total_VRM_by_mode)\n\n# A tibble: 18 × 2\n   Mode              Total_VRM\n   &lt;chr&gt;                 &lt;dbl&gt;\n 1 Bus             49444494088\n 2 Demand Response 17955073508\n 3 Heavy Rail      14620362107\n 4 Commuter Rail    6970644241\n 5 Vanpool          3015783362\n 6 Light Rail       2090094714\n 7 Commuter Bus     1380948975\n 8 Publico          1021270808\n 9 Trolleybus        236840288\n10 Rapid Bus         118425283\n11 Ferry Boat         65589783\n12 Streetcar          63389725\n13 Monorail           37879729\n14 Hybrid Rail        37787608\n15 Alaska Railroad    13833261\n16 Cable Car           7386019\n17 Inclined Plane       705904\n18 Aerial Tramway       292860\n\n#displaying mode with highest total VRM\nhighest_VRM_mode &lt;- total_VRM_by_mode |&gt;\n  filter(Total_VRM == max(Total_VRM))\n#printing highest_VRM_mode\nprint(highest_VRM_mode)\n\n# A tibble: 1 × 2\n  Mode    Total_VRM\n  &lt;chr&gt;       &lt;dbl&gt;\n1 Bus   49444494088\n\n\n\n\n\n\n# 3. How many trips were taken on the NYC Subway (Heavy Rail) in May 2024?\n#first filtering the condensed_usage data frame to only heavy rail to see what else needs to be filtered out\nheavy_rail_data &lt;- USAGE |&gt;\n  filter(Mode == \"Heavy Rail\")\n#viewing first 10 rows of filtered data\nhead(heavy_rail_data)\n\n# A tibble: 6 × 8\n  `NTD ID` Agency             metro_area Mode  `3 Mode` month         UPT    VRM\n     &lt;int&gt; &lt;chr&gt;              &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt;    &lt;date&gt;      &lt;dbl&gt;  &lt;dbl&gt;\n1    10003 Massachusetts Bay… Boston, M… Heav… Rail     2002-01-01 9.95e6 1.65e6\n2    10003 Massachusetts Bay… Boston, M… Heav… Rail     2002-02-01 9.75e6 1.50e6\n3    10003 Massachusetts Bay… Boston, M… Heav… Rail     2002-03-01 1.05e7 1.65e6\n4    10003 Massachusetts Bay… Boston, M… Heav… Rail     2002-04-01 1.07e7 1.64e6\n5    10003 Massachusetts Bay… Boston, M… Heav… Rail     2002-05-01 1.05e7 1.67e6\n6    10003 Massachusetts Bay… Boston, M… Heav… Rail     2002-06-01 1.04e7 1.59e6\n\n#displaying unique values of metro_area\nunique_metro_areas &lt;- USAGE |&gt;\n  distinct(metro_area)\nprint(unique_metro_areas)\n\n# A tibble: 376 × 1\n   metro_area                    \n   &lt;chr&gt;                         \n 1 Seattle--Tacoma, WA           \n 2 Spokane, WA                   \n 3 Yakima, WA                    \n 4 Eugene, OR                    \n 5 Portland, OR--WA              \n 6 Boise City, ID                \n 7 Anchorage, AK                 \n 8 Longview, WA--OR              \n 9 Kennewick--Richland--Pasco, WA\n10 Olympia--Lacey, WA            \n# ℹ 366 more rows\n\nnyc_subway_trips_count &lt;- USAGE |&gt;\n  filter(Mode == \"Heavy Rail\",\n         month == \"2024-05-01\",\n         Agency == \"MTA New York City Transit\") |&gt;\n  summarize(Total_Trips = sum(UPT, na.rm = TRUE))\n\n# Print the total trips taken on the NYC Subway in May 2024\nprint(nyc_subway_trips_count)\n\n# A tibble: 1 × 1\n  Total_Trips\n        &lt;dbl&gt;\n1   180458819\n\n\n\n\n\n\n# 5. How much did NYC subway ridership fall between April 2019 and April 2020?\n#finding ridership for April 2019 first\nnyc_subway_trips_april_2019 &lt;- USAGE |&gt;\n  filter(Mode == \"Heavy Rail\",\n         month == \"2019-04-01\",\n         Agency == \"MTA New York City Transit\") |&gt;\n  summarize(Total_Trips = sum(UPT, na.rm = TRUE))\n\n# Print the total trips taken on the NYC Subway in April 2019\nprint(nyc_subway_trips_april_2019)\n\n# A tibble: 1 × 1\n  Total_Trips\n        &lt;dbl&gt;\n1   232223929\n\n#ridership for april 2020 second \nnyc_subway_trips_april_2020 &lt;- USAGE |&gt;\n  filter(Mode == \"Heavy Rail\",\n         month == \"2020-04-01\",\n         Agency == \"MTA New York City Transit\") |&gt;\n  summarize(Total_Trips = sum(UPT, na.rm = TRUE))\n\n# Print the total trips taken on the NYC Subway in April 2020\nprint(nyc_subway_trips_april_2020)\n\n# A tibble: 1 × 1\n  Total_Trips\n        &lt;dbl&gt;\n1    20254269\n\n#calculating the difference \nnyc_ridership_change &lt;- abs(nyc_subway_trips_april_2020 - nyc_subway_trips_april_2019)\nprint(nyc_ridership_change)\n\n  Total_Trips\n1   211969660\n\n#Statement defining ridership change. Using paste() function to allow for string + variable to print together\nprint(paste(\"NYC Ridership fell by \", nyc_ridership_change, \" riders from April 2019 to April 2020.\"))\n\n[1] \"NYC Ridership fell by  211969660  riders from April 2019 to April 2020.\""
  },
  {
    "objectID": "mp01.html#exploratory-data-analysis",
    "href": "mp01.html#exploratory-data-analysis",
    "title": "mp01",
    "section": "",
    "text": "# ============================================================\n# Task 4 - Explore and Analyze\n# ============================================================\n\n# Three more interesting transit facts \n# Additional fact 1a - ridership for each mode by MTA NYC Transit \nmta_ridership_by_mode &lt;- USAGE |&gt;\n  filter(Agency == \"MTA New York City Transit\") |&gt;\n  group_by(Mode) |&gt;\n  summarize(Total_Ridership = sum(UPT, na.rm = TRUE)) |&gt;\n  arrange(desc(Total_Ridership))\n\nprint(mta_ridership_by_mode) #table outlining different modes of transportation and their total rides \n\n# A tibble: 5 × 2\n  Mode            Total_Ridership\n  &lt;chr&gt;                     &lt;dbl&gt;\n1 Heavy Rail          51672094135\n2 Bus                 16889723939\n3 Rapid Bus             315432467\n4 Commuter Bus          133304773\n5 Demand Response        91175466\n\n\n\n# Additional fact 1b - listing most popular nyc mode and its ridership\nnyc_most_popular_mode &lt;- mta_ridership_by_mode |&gt;\n  filter(Total_Ridership == max(Total_Ridership))\n\nprint(nyc_most_popular_mode) #heavy rail aka subway is most popular nyc mode of transportation\n\n# A tibble: 1 × 2\n  Mode       Total_Ridership\n  &lt;chr&gt;                &lt;dbl&gt;\n1 Heavy Rail     51672094135\n\n\n\n# Additional fact 2 - Comparing NYC ridership pre and post pandemic \n#pre-pandemic \npre_pandemic_ridership &lt;- USAGE |&gt;\n  filter(Agency == \"MTA New York City Transit\",\n         month &gt;= \"2019-01-01\",\n         month &lt;= \"2019-12-31\") |&gt;\n  summarize(avg_ridership = mean(UPT, na.rm = TRUE))\n\nprint(pre_pandemic_ridership)\n\n# A tibble: 1 × 1\n  avg_ridership\n          &lt;dbl&gt;\n1     57709634.\n\n#post-pandemic \npost_pandemic_ridership &lt;- USAGE |&gt;\n  filter(Agency == \"MTA New York City Transit\",\n         month &gt;= \"2022-01-01\",\n         month &lt;= \"2022-12-31\") |&gt;\n  summarize(avg_ridership = mean(UPT, na.rm = TRUE))\n\nprint(post_pandemic_ridership)\n\n# A tibble: 1 × 1\n  avg_ridership\n          &lt;dbl&gt;\n1     37980885.\n\nprint(paste(\"The average ridership for the year of 2019, pre-pandemic, was \", round(pre_pandemic_ridership,0), \" and the average ridership for the year of 2022, post pandemic, was \", round(post_pandemic_ridership,0)))\n\n[1] \"The average ridership for the year of 2019, pre-pandemic, was  57709634  and the average ridership for the year of 2022, post pandemic, was  37980885\"\n\n\n\n# Additional fact 3\n#MTA NYC Transit ridership efficiency by mode \n#where efficiency represents the avg # of unlinked passenger trips per vehicle revenue mile\nridership_efficiency &lt;- USAGE |&gt;\n  filter(Agency == \"MTA New York City Transit\") |&gt;\n  group_by(Mode) |&gt;\n  summarize(Efficiency = sum(UPT, na.rm = TRUE) / sum(VRM, na.rm = TRUE))\nprint(ridership_efficiency) #efficiency = for every mile traveled, x# of passengers carried \n\n# A tibble: 5 × 2\n  Mode            Efficiency\n  &lt;chr&gt;                &lt;dbl&gt;\n1 Bus                  8.05 \n2 Commuter Bus         1.15 \n3 Demand Response      0.107\n4 Heavy Rail           6.68 \n5 Rapid Bus            9.17"
  },
  {
    "objectID": "mp01.html#table-summarization",
    "href": "mp01.html#table-summarization",
    "title": "mp01",
    "section": "",
    "text": "# ============================================================\n# Task 5 - Table Summarization\n# ============================================================\n#creating a new table from USAGE that has annual total (sum) UPT and VRM for 2022\nnames(USAGE)\n\n[1] \"NTD ID\"     \"Agency\"     \"metro_area\" \"Mode\"       \"3 Mode\"    \n[6] \"month\"      \"UPT\"        \"VRM\"       \n\nUSAGE_2022_ANNUAL &lt;- USAGE |&gt;\n  filter(year(month) == 2022) |&gt;\n  group_by(`NTD ID`, Agency, metro_area, Mode) |&gt;\n  summarize(\n    UPT = sum(UPT, na.rm=TRUE),\n    VRM = sum(VRM, na.rm=TRUE)\n  ) |&gt;\n  ungroup()\n\n`summarise()` has grouped output by 'NTD ID', 'Agency', 'metro_area'. You can\noverride using the `.groups` argument.\n\nFINANCIALS &lt;- FINANCIALS |&gt;\n  mutate(Mode = case_when(\n    Mode == \"HR\" ~ \"Heavy Rail\",\n    Mode == \"LR\" ~ \"Light Rail\",\n    Mode == \"YR\" ~ \"Hybrid Rail\",\n    Mode == \"MB\" ~ \"Bus\",\n    Mode == \"DR\" ~ \"Demand Response\",\n    Mode == \"CB\" ~ \"Commuter Bus\",\n    Mode == \"FB\" ~ \"Ferry Boat\",\n    Mode == \"SR\" ~ \"Streetcar\", \n    Mode == \"TB\" ~ \"Trolleybus\",\n    Mode == \"VP\" ~ \"Vanpool\",\n    Mode == \"RB\" ~ \"Rapid Bus\",\n    Mode == \"MG\" ~ \"Monorail\",\n    Mode == \"CR\" ~ \"Commuter Rail\",\n    Mode == \"AR\" ~ \"Alaska Railroad\",\n    Mode == \"TR\" ~ \"Aerial Tramway\",\n    Mode == \"IP\" ~ \"Inclined Plane\",\n    Mode == \"PB\" ~ \"Publico\",\n    Mode == \"CC\" ~ \"Cable Car\",\n    TRUE ~ \"Unknown\"))  # Default for any unrecognized codes\n\n\n#Merging USAGE_2022_ANNUAL table to the FINANCIALS table \nUSAGE_AND_FINANCIALS &lt;- left_join(USAGE_2022_ANNUAL, \n                                  FINANCIALS, \n                                  join_by(`NTD ID`, Mode)) |&gt;\n  drop_na()\n#Viewing first few rows of merged table \nhead(USAGE_AND_FINANCIALS)\n\n# A tibble: 6 × 9\n  `NTD ID` Agency     metro_area Mode     UPT    VRM `Agency Name` `Total Fares`\n     &lt;dbl&gt; &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt;  &lt;dbl&gt;  &lt;dbl&gt; &lt;chr&gt;                 &lt;dbl&gt;\n1        1 King Coun… Seattle--… Bus   5.40e7 6.16e7 King County …      56846337\n2        1 King Coun… Seattle--… Dema… 6.63e5 1.29e7 King County …        832327\n3        1 King Coun… Seattle--… Ferr… 4.00e5 5.12e4 King County …       1715265\n4        1 King Coun… Seattle--… Stre… 1.12e6 1.80e5 King County …        588495\n5        1 King Coun… Seattle--… Trol… 9.58e6 2.64e6 King County …      10123486\n6        1 King Coun… Seattle--… Vanp… 7.03e5 4.41e6 King County …       5484481\n# ℹ 1 more variable: Expenses &lt;dbl&gt;"
  },
  {
    "objectID": "mp01.html#farebox-recovery-among-major-systems",
    "href": "mp01.html#farebox-recovery-among-major-systems",
    "title": "mp01",
    "section": "",
    "text": "# 1. Which transit system (agency and mode) had the most UPT in 2022?\n#table summarizing the total UPT for each agency and mode \nUPT_summary_agency_mode &lt;- USAGE_AND_FINANCIALS |&gt; \n  group_by(Agency, Mode) |&gt;\n  summarize(Total_UPT = sum(UPT, na.rm = TRUE)) |&gt;\n  arrange(desc(Total_UPT)) \n\n`summarise()` has grouped output by 'Agency'. You can override using the\n`.groups` argument.\n\n#printing summary table \nprint(UPT_summary_agency_mode)\n\n# A tibble: 1,129 × 3\n# Groups:   Agency [525]\n   Agency                                                   Mode       Total_UPT\n   &lt;chr&gt;                                                    &lt;chr&gt;          &lt;dbl&gt;\n 1 MTA New York City Transit                                Heavy Rail    1.79e9\n 2 MTA New York City Transit                                Bus           4.59e8\n 3 Los Angeles County Metropolitan Transportation Authority Bus           1.94e8\n 4 Chicago Transit Authority                                Bus           1.40e8\n 5 New Jersey Transit Corporation                           Bus           1.13e8\n 6 Chicago Transit Authority                                Heavy Rail    1.04e8\n 7 MTA Bus Company                                          Bus           1.00e8\n 8 Washington Metropolitan Area Transit Authority           Heavy Rail    9.84e7\n 9 Southeastern Pennsylvania Transportation Authority       Bus           9.66e7\n10 Washington Metropolitan Area Transit Authority           Bus           8.99e7\n# ℹ 1,119 more rows\n\n#max UPT from table \nmax_UPT &lt;- UPT_summary_agency_mode |&gt; \n  filter(Total_UPT == max(Total_UPT))\nmax_UPT_system &lt;- head(max_UPT,1)\nprint(max_UPT_system)\n\n# A tibble: 1 × 3\n# Groups:   Agency [1]\n  Agency                    Mode        Total_UPT\n  &lt;chr&gt;                     &lt;chr&gt;           &lt;dbl&gt;\n1 MTA New York City Transit Heavy Rail 1793073801\n\nmost_UPT_agency &lt;- max_UPT_system$Agency #grabs the value from the column after the $ sign\nprint(most_UPT_agency)\n\n[1] \"MTA New York City Transit\"\n\nmost_UPT_mode &lt;- max_UPT_system$Mode\nprint(most_UPT_mode)\n\n[1] \"Heavy Rail\"\n\nprint(paste(\"The Agency with the highest UPT is \", most_UPT_agency, \" with a mode of \", most_UPT_mode))\n\n[1] \"The Agency with the highest UPT is  MTA New York City Transit  with a mode of  Heavy Rail\"\n\n\n\n\n\n\n# 2. Which transit system (agency and mode) had the highest farebox recovery, defined as the highest ratio of Total Fares to Expenses?\nhighest_farebox_recovery &lt;- USAGE_AND_FINANCIALS |&gt;\n  mutate(Farebox_Recovery = `Total Fares` / Expenses) |&gt;\n  filter(Farebox_Recovery == max(Farebox_Recovery, na.rm = TRUE)) |&gt;\n  arrange(desc(Farebox_Recovery)) |&gt;\n  head(1) #returns top row\nprint(highest_farebox_recovery)\n\n# A tibble: 1 × 10\n  `NTD ID` Agency       metro_area Mode    UPT   VRM `Agency Name` `Total Fares`\n     &lt;dbl&gt; &lt;chr&gt;        &lt;chr&gt;      &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt;                 &lt;dbl&gt;\n1    40191 Transit Aut… Elizabeth… Vanp…  9640 94027 Transit Auth…         97300\n# ℹ 2 more variables: Expenses &lt;dbl&gt;, Farebox_Recovery &lt;dbl&gt;\n\nmost_farebox_agency &lt;- highest_farebox_recovery$Agency\nmost_farebox_mode &lt;- highest_farebox_recovery$Mode\ntop_recovery &lt;- highest_farebox_recovery$Farebox_Recovery\n\nprint(paste(\"The Agency with the highest Farebox Recovery is\", most_farebox_agency, \"and its mode is\", most_farebox_mode, \"with a farebox recovery ratio of\", round(top_recovery,2)))\n\n[1] \"The Agency with the highest Farebox Recovery is Transit Authority of Central Kentucky and its mode is Vanpool with a farebox recovery ratio of 2.38\"\n\n\n\n\n\n\n# 3. Which transit system (agency and mode) has the lowest expenses per UPT?\nlowest_expenses_per_UPT &lt;- USAGE_AND_FINANCIALS |&gt;\n  mutate(Expenses_per_UPT = Expenses /UPT) |&gt;\n  arrange(Expenses_per_UPT) |&gt; #arranges in ascending order \n  filter(Expenses_per_UPT == min(Expenses_per_UPT, na.rm = TRUE)) |&gt;\n  head(1) #selects top row, which will be lowest, since in ascending order\n\nlowest_exp_agency &lt;- lowest_expenses_per_UPT$Agency\nlowest_exp_mode &lt;- lowest_expenses_per_UPT$Mode\nlowest_exp_per_UPT &lt;- lowest_expenses_per_UPT$Expenses_per_UPT\n\nprint(paste(\"The transit system with the lowest expenses per UPT is\", lowest_exp_agency, \"and its mode is\", lowest_exp_mode, \"with an expenses per UPT ratio of\", round(lowest_exp_per_UPT,2)))\n\n[1] \"The transit system with the lowest expenses per UPT is North Carolina State University and its mode is Bus with an expenses per UPT ratio of 1.18\"\n\n\n\n\n\n\n# 4. Which transit system (agency and mode) has the highest total fares per UPT?\nhighest_fares_per_UPT &lt;- USAGE_AND_FINANCIALS |&gt;\n  mutate(Fares_per_UPT = `Total Fares` / UPT) |&gt;\n  arrange(desc(Fares_per_UPT)) |&gt;\n  head(1)\n\nhighest_fares_agency &lt;- highest_fares_per_UPT$Agency\nhighest_fares_mode &lt;- highest_fares_per_UPT$Mode\nhighest_fares_per_UPT_amt &lt;- highest_fares_per_UPT$Fares_per_UPT\n\nprint(paste(\"The transit system with the highest total fares per UPT is\", highest_fares_agency,\"and its mode is\", highest_fares_mode, \"with a fares per UPT ratio of\", round(highest_fares_per_UPT_amt,2)))\n\n[1] \"The transit system with the highest total fares per UPT is Altoona Metro Transit and its mode is Demand Response with a fares per UPT ratio of 660.12\"\n\n\n\n\n\n\n# 5. Which transit system (agency and mode) has the lowest expenses per VRM?\n#very similar to code for #3 \nlowest_expenses_per_VRM &lt;- USAGE_AND_FINANCIALS |&gt;\n  mutate(Expenses_per_VRM = Expenses / VRM) |&gt;\n  arrange(Expenses_per_VRM) |&gt;\n  head(1)\n\nlowest_exp_VRM_agency &lt;- lowest_expenses_per_VRM$Agency\nlowest_exp_VRM_mode &lt;- lowest_expenses_per_VRM$Mode\nlowest_exp_per_VRM_amt &lt;- lowest_expenses_per_VRM$Expenses_per_VRM\n\nprint(paste(\"The transit system with the lowest expenses per VRM is\", lowest_exp_VRM_agency, \"and its mode is\", lowest_exp_VRM_mode, \"with an expenses per VRM ratio of\", round(lowest_exp_per_VRM_amt,2)))\n\n[1] \"The transit system with the lowest expenses per VRM is New Mexico Department of Transportation and its mode is Vanpool with an expenses per VRM ratio of 0.34\"\n\n\n\n\n\n\n# 6. Which transit system (agency and mode) has the highest total fares per VRM?\n# very similar to code for #4\nhighest_fares_per_VRM &lt;- USAGE_AND_FINANCIALS |&gt;\n  mutate(Fares_per_VRM = `Total Fares` / VRM) |&gt;\n  arrange(desc(Fares_per_VRM)) |&gt;\n  head(1)\n\nhighest_fares_agency &lt;- highest_fares_per_VRM$Agency\nhighest_fares_mode &lt;- highest_fares_per_VRM$Mode\nhighest_fares_per_VRM_amt &lt;- highest_fares_per_VRM$Fares_per_VRM\n\nprint(paste(\"The transit system with the highest total fares per VRM is\", highest_fares_agency,\"and its mode is\", highest_fares_mode, \"with a fares per VRM ratio of\", round(highest_fares_per_VRM_amt,2)))\n\n[1] \"The transit system with the highest total fares per VRM is Chicago Water Taxi (Wendella) and its mode is Ferry Boat with a fares per VRM ratio of 237.46\""
  }
]